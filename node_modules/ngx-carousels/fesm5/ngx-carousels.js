import { CommonModule } from '@angular/common';
import { __spread } from 'tslib';
import { interval, timer } from 'rxjs';
import { first, take, last } from 'rxjs/operators';
import { Directive, TemplateRef, Component, ContentChildren, Input, ViewChildren, Output, EventEmitter, ViewChild, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var CarouselItemDirective = /** @class */ (function () {
    function CarouselItemDirective(templateRef) {
        this.templateRef = templateRef;
    }
    CarouselItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ng-template[carouselItem]',
                },] }
    ];
    /** @nocollapse */
    CarouselItemDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    return CarouselItemDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var CarouselComponent = /** @class */ (function () {
    function CarouselComponent() {
        /**
         * Enable autoChange of carousel items
         */
        this.autochange = false;
        /**
         * Enable transit animation
         */
        this.animationType = 'none';
        /**
         * Period for autoChange
         */
        this.period = 5000;
        this._activeIndex = 0;
        this._isAnimation = false;
    }
    /**
     * @return {?}
     */
    CarouselComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.setupCarousel();
    };
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    CarouselComponent.prototype.setupCarousel = 
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this._subscriber)
            this._subscriber.unsubscribe();
        this.setItemActive(this._activeIndex);
        if (this.autochange)
            this._subscriber = interval(this.period)
                .subscribe(function () {
                _this.setItemInactive(_this._activeIndex);
                _this._activeIndex = _this._activeIndex + 1 >= _this.carouselItems.length ? 0 : _this._activeIndex + 1;
                _this.setItemActive(_this._activeIndex);
            });
    };
    //***************************************************************************************************************
    //-API-----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-API-----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} indexPath
     * @return {?}
     */
    CarouselComponent.prototype.selectAt = 
    //***************************************************************************************************************
    //-API-----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} indexPath
     * @return {?}
     */
    function (indexPath) {
        if (!this._isAnimation) {
            this.setItemInactive(this._activeIndex);
            this._activeIndex = indexPath >= this.carouselItems.length ? this.carouselItems.length - 1 : indexPath;
            this._activeIndex = indexPath < 0 ? 0 : indexPath;
            this.setItemActive(this._activeIndex);
            this.setupCarousel();
        }
    };
    /**
     * @return {?}
     */
    CarouselComponent.prototype.next = /**
     * @return {?}
     */
    function () {
        if (!this._isAnimation) {
            this.setItemInactive(this._activeIndex);
            this._activeIndex = this._activeIndex + 1 >= this.carouselItems.length ? 0 : this._activeIndex + 1;
            this.setItemActive(this._activeIndex);
            this.setupCarousel();
        }
    };
    /**
     * @return {?}
     */
    CarouselComponent.prototype.prev = /**
     * @return {?}
     */
    function () {
        if (!this._isAnimation) {
            this.setItemInactive(this._activeIndex);
            this._activeIndex = this._activeIndex - 1 < 0 ? this.carouselItems.length - 1 : this._activeIndex - 1;
            this.setItemActive(this._activeIndex);
            this.setupCarousel();
        }
    };
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} index
     * @return {?}
     */
    CarouselComponent.prototype.setItemActive = 
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        var _this = this;
        /** @type {?} */
        var item = this.carouselItems.find(function (_, i) { return i == index; });
        switch (this.animationType) {
            case 'fade':
                if (item) {
                    this._isAnimation = true;
                    item.nativeElement.classList.add('active', 'fade-in');
                    interval(1005).pipe(first())
                        .subscribe(function () {
                        item.nativeElement.classList.remove('fade-in');
                        _this._isAnimation = false;
                    });
                }
                break;
            default:
                if (item)
                    item.nativeElement.classList.add('active');
                break;
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    CarouselComponent.prototype.setItemInactive = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        /** @type {?} */
        var item = this.carouselItems.find(function (_, i) { return i == index; });
        switch (this.animationType) {
            case 'fade':
                if (item) {
                    item.nativeElement.classList.add('fade-out');
                    interval(1005).pipe(first())
                        .subscribe(function () {
                        item.nativeElement.classList.remove('active', 'fade-out');
                    });
                }
                break;
            default:
                if (item)
                    item.nativeElement.classList.remove('active');
                break;
        }
    };
    CarouselComponent.decorators = [
        { type: Component, args: [{
                    selector: 'carousel',
                    template: "<div class=\"carousel\" [style.position]=\"animationType == 'none' ? 'static' : 'relative'\">\r\n    <ng-template ngFor let-item [ngForOf]=\"carouselInners\">\r\n        <div #carouselItems class=\"carousel__item\">\r\n            <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\r\n        </div>\r\n    </ng-template>\r\n</div>",
                    styles: [".carousel__item{display:none;transition:transform 1s ease-in-out,opacity 1s ease-in-out,-webkit-transform 1s ease-in-out}.carousel__item.active{display:block}.carousel__item.fade-out{position:absolute;top:0;right:0;bottom:0;left:0;-webkit-animation:1s linear fadeOut;animation:1s linear fadeOut}.carousel__item.fade-in{-webkit-animation:1s linear fadeIn;animation:1s linear fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}"]
                }] }
    ];
    CarouselComponent.propDecorators = {
        carouselInners: [{ type: ContentChildren, args: [CarouselItemDirective,] }],
        carouselItems: [{ type: ViewChildren, args: ['carouselItems',] }],
        autochange: [{ type: Input }],
        animationType: [{ type: Input }],
        period: [{ type: Input }]
    };
    return CarouselComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var RotateCarouselItemDirective = /** @class */ (function () {
    function RotateCarouselItemDirective(templateRef) {
        this.templateRef = templateRef;
    }
    RotateCarouselItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ng-template[rotateCarouselItem]',
                },] }
    ];
    /** @nocollapse */
    RotateCarouselItemDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    return RotateCarouselItemDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/** @type {?} */
var DEFAULT_WIDTH = '300px';
/** @type {?} */
var DEFAULT_HEIGHT = '200px';
/** @type {?} */
var DEFAULT_DEPTH = '510px';
/** @type {?} */
var DEFAULT_PERIOD = 3500;
/** @type {?} */
var FULL_ANGLE = 360;
var RotateCarouselComponent = /** @class */ (function () {
    function RotateCarouselComponent() {
        /**
         * Emit event of rotation start
         */
        this.rotationStart = new EventEmitter();
        /**
         * Emit event of rotation end
         */
        this.rotationEnd = new EventEmitter();
        /**
         * Width of content in carousel item
         */
        this.width = DEFAULT_WIDTH;
        /**
         * Height of content in carousel item
         */
        this.height = DEFAULT_HEIGHT;
        /**
         * Depth of the center of carousel
         */
        this.depth = DEFAULT_DEPTH;
        /**
         * Period of carousel rotation
         */
        this.period = DEFAULT_PERIOD;
        /**
         * Direction of rotation
         */
        this.direction = 'forward';
        this._activeIndex = 0;
    }
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.calcItemsAngle();
        this.setupRotation();
        //this.calcHeight();
    };
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.setupRotation();
        //this.calcHeight();
    };
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.calcItemsAngle = 
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._angleStep = FULL_ANGLE / this.rotateItems.length;
        /** @type {?} */
        var angle = 0;
        this.rotateItems.forEach(function (x) {
            x.angle = angle;
            angle += _this._angleStep;
        });
    };
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.setupRotation = /**
     * @return {?}
     */
    function () {
        if (!Number.isNaN((/** @type {?} */ (this.period)) % 1))
            this._period = parseInt((/** @type {?} */ (this.period)));
        else {
            /** @type {?} */
            var periodStr = (/** @type {?} */ (this.period));
            // split string like '1003ms' to '1000' and 'ms'
            /** @type {?} */
            var values = periodStr.replace(/\'/g, '').split(/([0-9]*\.?[0-9])/);
            this._period = values[2] == 's' ? parseInt(values[1]) * 1000 : parseInt(values[1]);
        }
        if (this._rotationTimerSubscription)
            this._rotationTimerSubscription.unsubscribe();
        this._rotationTimerSubscription = this.setRotationTimer();
    };
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.calcHeight = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var maxH = Math.max.apply(Math, __spread([null], this.rotateItems.map(function (x) { return x.templateRef.elementRef.nativeElement.clientHeight; })));
        if (!this.height)
            this.height = maxH + 'px';
    };
    //***************************************************************************************************************
    //-Events--------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Events--------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.onRotationStart = 
    //***************************************************************************************************************
    //-Events--------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    function () {
        this.rotationStart.emit(this._activeIndex);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    RotateCarouselComponent.prototype.onRotateEnd = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (this._activeIndex == 0) {
            this.carouselInner.nativeElement.style.transition = 'none';
            this.carouselInner.nativeElement.style.transform = 'rotateY(0deg)';
        }
        this.rotationEnd.emit(this._activeIndex);
    };
    //***************************************************************************************************************
    //-Style-Visibility-Availability---------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Style-Visibility-Availability---------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.getCarouselStyle = 
    //***************************************************************************************************************
    //-Style-Visibility-Availability---------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var width = this.width;
        /** @type {?} */
        var height = this.height;
        /** @type {?} */
        var depth = this.depth;
        return { width: width, height: height, transform: 'translateZ(-' + depth + ')' };
    };
    /**
     * @param {?} item
     * @return {?}
     */
    RotateCarouselComponent.prototype.getItemStyle = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var depth = this.depth;
        /** @type {?} */
        var style = { transform: 'rotateY(' + item.angle + 'deg) translateZ(' + depth + ')' };
        return style;
    };
    //***************************************************************************************************************
    //-Methods-------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Methods-------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} indexPath
     * @return {?}
     */
    RotateCarouselComponent.prototype.selectAt = 
    //***************************************************************************************************************
    //-Methods-------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} indexPath
     * @return {?}
     */
    function (indexPath) {
        this._rotationTimerSubscription.unsubscribe();
        this.carouselInner.nativeElement.style.transform = "rotateY(" + indexPath * this._angleStep + "deg)";
        this._rotationTimerSubscription = this.setRotationTimer();
    };
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    RotateCarouselComponent.prototype.setRotationTimer = 
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        return timer(0, this._period)
            .subscribe(function (i) {
            _this._activeIndex = i % _this.rotateItems.length;
            /** @type {?} */
            var angle;
            if (_this._activeIndex == 1)
                _this.carouselInner.nativeElement.style.transition = "transform " + _this._period / 2 + "ms ease-in-out";
            if (i > 0 && _this._activeIndex == 0)
                angle = _this.rotateItems.length * _this._angleStep * (_this.direction == 'forward' ? -1 : 1);
            else
                angle = _this._activeIndex * _this._angleStep * (_this.direction == 'forward' ? -1 : 1);
            _this.carouselInner.nativeElement.style.transform = "rotateY(" + angle + "deg)";
            _this.onRotationStart();
        });
    };
    RotateCarouselComponent.decorators = [
        { type: Component, args: [{
                    selector: 'rotate-carousel',
                    template: "<figure class=\"carousel\">\r\n    <div class=\"carousel__content\" [ngStyle]=\"getCarouselStyle()\">\r\n        <div #carouselInner class=\"carousel__inner\" (transitionend)=\"onRotateEnd($event)\">\r\n            <ng-template ngFor let-item [ngForOf]=\"rotateItems\">\r\n                <div class=\"carousel__item\" [ngStyle]=\"getItemStyle(item)\">\r\n                    <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</figure>",
                    styles: [":host{width:100%}.carousel{display:flex;justify-content:center;-webkit-perspective:1000px;perspective:1000px}.carousel__content{-webkit-transform:translateZ(-40vw);transform:translateZ(-40vw);-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.carousel__inner{height:100%;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.carousel__item{display:flex;align-items:center;position:absolute;height:100%;width:100%}.carousel__item img{height:100%;width:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:center;object-position:center;border-radius:15px}"]
                }] }
    ];
    RotateCarouselComponent.propDecorators = {
        rotateItems: [{ type: ContentChildren, args: [RotateCarouselItemDirective,] }],
        carouselInner: [{ type: ViewChild, args: ['carouselInner',] }],
        rotationStart: [{ type: Output }],
        rotationEnd: [{ type: Output }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        depth: [{ type: Input }],
        period: [{ type: Input }],
        direction: [{ type: Input }]
    };
    return RotateCarouselComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var RingCarouselItemDirective = /** @class */ (function () {
    function RingCarouselItemDirective(templateRef) {
        this.templateRef = templateRef;
    }
    RingCarouselItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ng-template[ringCarouselItem]',
                },] }
    ];
    /** @nocollapse */
    RingCarouselItemDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    return RingCarouselItemDirective;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var RingCarouselComponent = /** @class */ (function () {
    function RingCarouselComponent() {
        /**
         * Emit event of transition start
         */
        this.transitionStart = new EventEmitter();
        /**
         * Emit event of transition end
         */
        this.transitionEnd = new EventEmitter();
        /**
         * Color of transition rings
         */
        this.ringColor = 'white';
        /**
         * Count of transition rings
         */
        this.ringsCount = 12;
        /**
         * Rings delay in ms
         */
        this.ringsDelay = 130;
        /**
         * Ring expand/collapse duration in ms
         */
        this.ringsDuration = 800;
        /**
         * Expand carousel inner in transition
         */
        this.expandOnTransition = true;
        /**
         * Enable control on left and right part click
         */
        this.enableControl = true;
        /**
         * Stroke-width of each transition circle
         */
        this._strokeWidthStep = 0;
        this._isExpanding = false;
        this._isCollapsing = false;
    }
    /**
     * @return {?}
     */
    RingCarouselComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this._activeItem = this.carouselItems.first;
        this._activeIndex = 0;
    };
    /**
     * @return {?}
     */
    RingCarouselComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        if (typeof this.ringsCount == 'string')
            this.ringsCount = parseInt((/** @type {?} */ (this.ringsCount)));
    };
    //***************************************************************************************************************
    //-Api-----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /** Turns the carousel to the item with the index path */
    //***************************************************************************************************************
    //-Api-----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * Turns the carousel to the item with the index path
     * @param {?} index
     * @param {?=} $event
     * @return {?}
     */
    RingCarouselComponent.prototype.selectAt = 
    //***************************************************************************************************************
    //-Api-----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * Turns the carousel to the item with the index path
     * @param {?} index
     * @param {?=} $event
     * @return {?}
     */
    function (index, $event) {
        if ($event === void 0) { $event = null; }
        this._activeIndex = index;
        /** @type {?} */
        var x;
        /** @type {?} */
        var y;
        if ($event) {
            x = $event.layerX;
            y = $event.layerY;
        }
        else {
            y = this.carouselRef.nativeElement.clientHeight / 2;
            x = this.carouselRef.nativeElement.clientWidth / 2;
        }
        this.showRings(x, y, index);
    };
    /** Select next carousel item  */
    /**
     * Select next carousel item
     * @param {?=} $event
     * @return {?}
     */
    RingCarouselComponent.prototype.next = /**
     * Select next carousel item
     * @param {?=} $event
     * @return {?}
     */
    function ($event) {
        if ($event === void 0) { $event = null; }
        this._activeIndex = this._activeIndex + 1 < this.carouselItems.length ? this._activeIndex + 1 : 0;
        this.selectAt(this._activeIndex, $event);
    };
    /** Select previous carousel item */
    /**
     * Select previous carousel item
     * @param {?=} $event
     * @return {?}
     */
    RingCarouselComponent.prototype.prev = /**
     * Select previous carousel item
     * @param {?=} $event
     * @return {?}
     */
    function ($event) {
        if ($event === void 0) { $event = null; }
        this._activeIndex = this._activeIndex - 1 >= 0 ? this._activeIndex - 1 : this.carouselItems.length - 1;
        this.selectAt(this._activeIndex, $event);
    };
    //***************************************************************************************************************
    //-Style-Visibility-Availability---------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Style-Visibility-Availability---------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} x
     * @param {?} y
     * @param {?} index
     * @return {?}
     */
    RingCarouselComponent.prototype.showRings = 
    //***************************************************************************************************************
    //-Style-Visibility-Availability---------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} x
     * @param {?} y
     * @param {?} index
     * @return {?}
     */
    function (x, y, index) {
        var _this = this;
        this.calcRingsWidth(x, y);
        this._cx = x;
        this._cy = y;
        this._isExpanding = true;
        /** @type {?} */
        var timer$$1 = interval(this.ringsDelay).pipe(take(this.ringsCount));
        timer$$1.subscribe(function (timValue) {
            _this.transitionStart.emit(index);
            /** @type {?} */
            var animation = _this.expandAnimations.find(function (_, i) { return timValue == i; });
            animation.nativeElement.beginElement();
        });
        timer$$1.pipe(last()).subscribe(function (_) {
            interval(_this.ringsDuration).pipe(first())
                .subscribe(function (_) {
                _this._activeItem = _this.carouselItems.find(function (_, i) { return i == index; });
                _this._isExpanding = false;
                _this.hideRings();
            });
        });
    };
    /**
     * @return {?}
     */
    RingCarouselComponent.prototype.hideRings = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._isCollapsing = true;
        /** @type {?} */
        var timer$$1 = interval(this.ringsDelay).pipe(take(this.ringsCount));
        timer$$1.subscribe(function (i) {
            /** @type {?} */
            var animation = _this.collapseAnimations.find(function (_, index) { return i == index; });
            animation.nativeElement.beginElement();
        });
        timer$$1.pipe(last()).subscribe(function (_) {
            interval(_this.ringsDuration).pipe(first())
                .subscribe(function (_) {
                _this._isCollapsing = false;
                _this.transitionEnd.emit(_this._activeIndex);
            });
        });
    };
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    RingCarouselComponent.prototype.calcRingsWidth = 
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    function (x, y) {
        /** @type {?} */
        var x1 = this.carouselRef.nativeElement.clientWidth;
        /** @type {?} */
        var y1 = this.carouselRef.nativeElement.clientHeight;
        /** @type {?} */
        var isTop = y1 / 2 - y > 0;
        /** @type {?} */
        var isLeft = x1 / 2 - x > 0;
        /** @type {?} */
        var d;
        if (isTop && isLeft)
            d = Math.sqrt(Math.pow(y1 - y, 2) + Math.pow(x1 - x, 2));
        else if (isTop && !isLeft)
            d = Math.sqrt(Math.pow(y1 - y, 2) + Math.pow(x, 2));
        else if (!isTop && isLeft)
            d = Math.sqrt((Math.pow(y, 2) + Math.pow(x1 - x, 2)));
        else
            d = Math.sqrt((Math.pow(y, 2) + Math.pow(x, 2)));
        this._strokeWidthStep = d / (this.ringsCount - 1);
    };
    RingCarouselComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ring-carousel',
                    template: "<div #carousel class=\"carousel\">\r\n    <div class=\"carousel__inner\" [style.transform]=\"expandOnTransition && (_isExpanding || _isCollapsing) ? 'scale(1.2)' : 'none'\">\r\n        <ng-template [ngTemplateOutlet]=\"_activeItem.templateRef\"></ng-template>\r\n    </div>\r\n    <div *ngIf=\"enableControl\" class=\"control\">\r\n        <div class=\"left\" (click)=\"prev($event)\"></div>\r\n        <div class=\"right\" (click)=\"next($event)\"></div>\r\n    </div>\r\n    <div class=\"circles\" *ngIf=\"_isExpanding || _isCollapsing\">\r\n        <svg>\r\n            <ng-template ngFor [ngForOf]=\"' '.repeat(ringsCount).split('')\" let-i=\"index\">\r\n                <svg:circle [attr.cx]=\"_cx\" [attr.cy]=\"_cy\" [attr.r]=\"_strokeWidthStep * i + 1\" fill=\"none\" [attr.stroke]=\"ringColor\" stroke-width=\"0\">\r\n                    <animate #expandSvgAnimations attributeName=\"stroke-width\" begin=\"click\" [attr.dur]=\"ringsDuration + 'ms'\" from=\"0\" [attr.to]=\"_strokeWidthStep + 1\" fill=\"freeze\" />\r\n                    <animate #collapseSvgAnimations attributeName=\"stroke-width\" begin=\"click\" [attr.dur]=\"ringsDuration + 'ms'\" [attr.from]=\"_strokeWidthStep + 1\" to=\"0\" fill=\"freeze\" />\r\n                </svg:circle>\r\n            </ng-template>\r\n        </svg>\r\n    </div>\r\n</div>\r\n\r\n",
                    styles: [":host{width:100%}.carousel{position:relative;overflow:hidden}.carousel__inner{transition:transform .8s;transition:transform .8s,-webkit-transform .8s;z-index:1}.control{display:flex;position:absolute;top:0;right:0;bottom:0;left:0;z-index:2}.control .left,.control .right{height:100%;flex:1;cursor:pointer}.circles{position:absolute;top:0;right:0;bottom:0;left:0;z-index:3}.circles svg{height:100%;width:100%}"]
                }] }
    ];
    RingCarouselComponent.propDecorators = {
        carouselItems: [{ type: ContentChildren, args: [RingCarouselItemDirective,] }],
        carouselRef: [{ type: ViewChild, args: ['carousel',] }],
        expandAnimations: [{ type: ViewChildren, args: ['expandSvgAnimations',] }],
        collapseAnimations: [{ type: ViewChildren, args: ['collapseSvgAnimations',] }],
        transitionStart: [{ type: Output }],
        transitionEnd: [{ type: Output }],
        ringColor: [{ type: Input }],
        ringsCount: [{ type: Input }],
        ringsDelay: [{ type: Input }],
        ringsDuration: [{ type: Input }],
        expandOnTransition: [{ type: Input }],
        enableControl: [{ type: Input }]
    };
    return RingCarouselComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
var CarouselModule = /** @class */ (function () {
    function CarouselModule() {
    }
    CarouselModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        CarouselComponent, CarouselItemDirective,
                        RotateCarouselComponent, RotateCarouselItemDirective,
                        RingCarouselComponent, RingCarouselItemDirective
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        CarouselComponent, CarouselItemDirective,
                        RotateCarouselComponent, RotateCarouselItemDirective,
                        RingCarouselComponent, RingCarouselItemDirective
                    ]
                },] }
    ];
    return CarouselModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

export { CarouselModule, RingCarouselComponent, RotateCarouselComponent, RingCarouselItemDirective, RotateCarouselItemDirective, CarouselItemDirective as ɵb, CarouselComponent as ɵa };

//# sourceMappingURL=ngx-carousels.js.map