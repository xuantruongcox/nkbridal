import { QueryList, EventEmitter, AfterContentInit, ElementRef, OnChanges } from '@angular/core';
import { RingCarouselItemDirective } from './ring-carousel-item.directive';
export declare class RingCarouselComponent implements AfterContentInit, OnChanges {
    carouselItems: QueryList<RingCarouselItemDirective>;
    carouselRef: ElementRef;
    expandAnimations: QueryList<ElementRef>;
    collapseAnimations: QueryList<ElementRef>;
    /** Emit event of transition start */
    transitionStart: EventEmitter<number>;
    /** Emit event of transition end */
    transitionEnd: EventEmitter<number>;
    /** Color of transition rings */
    ringColor: string;
    /** Count of transition rings */
    ringsCount: number;
    /** Rings delay in ms */
    ringsDelay: number;
    /** Ring expand/collapse duration in ms */
    ringsDuration: number;
    /** Expand carousel inner in transition */
    expandOnTransition: boolean;
    /** Enable control on left and right part click */
    enableControl: boolean;
    private _activeIndex;
    _activeItem: RingCarouselItemDirective;
    /** Stroke-width of each transition circle */
    _strokeWidthStep: number;
    _isExpanding: boolean;
    _isCollapsing: boolean;
    _cx: number;
    _cy: number;
    ngAfterContentInit(): void;
    ngOnChanges(): void;
    /** Turns the carousel to the item with the index path */
    selectAt(index: number, $event?: any): void;
    /** Select next carousel item  */
    next($event?: any): void;
    /** Select previous carousel item */
    prev($event?: any): void;
    showRings(x: number, y: number, index: number): void;
    hideRings(): void;
    calcRingsWidth(x: number, y: number): void;
}
