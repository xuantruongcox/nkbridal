import { EventEmitter, QueryList, ElementRef, AfterContentInit, OnChanges } from '@angular/core';
import { Subscription } from 'rxjs';
import { RotateCarouselItemDirective } from './rotate-carousel-item.directive';
export declare class RotateCarouselComponent implements AfterContentInit, OnChanges {
    rotateItems: QueryList<RotateCarouselItemDirective>;
    carouselInner: ElementRef;
    /** Emit event of rotation start */
    rotationStart: EventEmitter<number>;
    /** Emit event of rotation end */
    rotationEnd: EventEmitter<number>;
    /** Width of content in carousel item */
    width: string;
    /** Height of content in carousel item */
    height: string;
    /** Depth of the center of carousel */
    depth: string;
    /** Period of carousel rotation */
    period: number | string;
    /** Direction of rotation */
    direction: 'forward' | 'reverse';
    private _period;
    private _angleStep;
    private _rotationTimerSubscription;
    private _activeIndex;
    ngAfterContentInit(): void;
    ngOnChanges(): void;
    private calcItemsAngle;
    private setupRotation;
    private calcHeight;
    private onRotationStart;
    onRotateEnd($event: any): void;
    getCarouselStyle(): {
        width: string;
        height: string;
        transform: string;
    };
    getItemStyle(item: RotateCarouselItemDirective): {
        transform: string;
    };
    selectAt(indexPath: number): void;
    setRotationTimer(): Subscription;
}
