/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, QueryList, ContentChildren, Input, ViewChildren } from '@angular/core';
import { interval } from 'rxjs';
import { CarouselItemDirective } from './carousel-item.directive';
import { first } from 'rxjs/operators';
export class CarouselComponent {
    constructor() {
        /**
         * Enable autoChange of carousel items
         */
        this.autochange = false;
        /**
         * Enable transit animation
         */
        this.animationType = 'none';
        /**
         * Period for autoChange
         */
        this.period = 5000;
        this._activeIndex = 0;
        this._isAnimation = false;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.setupCarousel();
    }
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    setupCarousel() {
        if (this._subscriber)
            this._subscriber.unsubscribe();
        this.setItemActive(this._activeIndex);
        if (this.autochange)
            this._subscriber = interval(this.period)
                .subscribe(() => {
                this.setItemInactive(this._activeIndex);
                this._activeIndex = this._activeIndex + 1 >= this.carouselItems.length ? 0 : this._activeIndex + 1;
                this.setItemActive(this._activeIndex);
            });
    }
    //***************************************************************************************************************
    //-API-----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} indexPath
     * @return {?}
     */
    selectAt(indexPath) {
        if (!this._isAnimation) {
            this.setItemInactive(this._activeIndex);
            this._activeIndex = indexPath >= this.carouselItems.length ? this.carouselItems.length - 1 : indexPath;
            this._activeIndex = indexPath < 0 ? 0 : indexPath;
            this.setItemActive(this._activeIndex);
            this.setupCarousel();
        }
    }
    /**
     * @return {?}
     */
    next() {
        if (!this._isAnimation) {
            this.setItemInactive(this._activeIndex);
            this._activeIndex = this._activeIndex + 1 >= this.carouselItems.length ? 0 : this._activeIndex + 1;
            this.setItemActive(this._activeIndex);
            this.setupCarousel();
        }
    }
    /**
     * @return {?}
     */
    prev() {
        if (!this._isAnimation) {
            this.setItemInactive(this._activeIndex);
            this._activeIndex = this._activeIndex - 1 < 0 ? this.carouselItems.length - 1 : this._activeIndex - 1;
            this.setItemActive(this._activeIndex);
            this.setupCarousel();
        }
    }
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} index
     * @return {?}
     */
    setItemActive(index) {
        /** @type {?} */
        const item = this.carouselItems.find((_, i) => i == index);
        switch (this.animationType) {
            case 'fade':
                if (item) {
                    this._isAnimation = true;
                    item.nativeElement.classList.add('active', 'fade-in');
                    interval(1005).pipe(first())
                        .subscribe(() => {
                        item.nativeElement.classList.remove('fade-in');
                        this._isAnimation = false;
                    });
                }
                break;
            default:
                if (item)
                    item.nativeElement.classList.add('active');
                break;
        }
    }
    /**
     * @param {?} index
     * @return {?}
     */
    setItemInactive(index) {
        /** @type {?} */
        const item = this.carouselItems.find((_, i) => i == index);
        switch (this.animationType) {
            case 'fade':
                if (item) {
                    item.nativeElement.classList.add('fade-out');
                    interval(1005).pipe(first())
                        .subscribe(() => {
                        item.nativeElement.classList.remove('active', 'fade-out');
                    });
                }
                break;
            default:
                if (item)
                    item.nativeElement.classList.remove('active');
                break;
        }
    }
}
CarouselComponent.decorators = [
    { type: Component, args: [{
                selector: 'carousel',
                template: "<div class=\"carousel\" [style.position]=\"animationType == 'none' ? 'static' : 'relative'\">\r\n    <ng-template ngFor let-item [ngForOf]=\"carouselInners\">\r\n        <div #carouselItems class=\"carousel__item\">\r\n            <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\r\n        </div>\r\n    </ng-template>\r\n</div>",
                styles: [".carousel__item{display:none;transition:transform 1s ease-in-out,opacity 1s ease-in-out,-webkit-transform 1s ease-in-out}.carousel__item.active{display:block}.carousel__item.fade-out{position:absolute;top:0;right:0;bottom:0;left:0;-webkit-animation:1s linear fadeOut;animation:1s linear fadeOut}.carousel__item.fade-in{-webkit-animation:1s linear fadeIn;animation:1s linear fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}100%{opacity:0}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}"]
            }] }
];
CarouselComponent.propDecorators = {
    carouselInners: [{ type: ContentChildren, args: [CarouselItemDirective,] }],
    carouselItems: [{ type: ViewChildren, args: ['carouselItems',] }],
    autochange: [{ type: Input }],
    animationType: [{ type: Input }],
    period: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    CarouselComponent.prototype.carouselInners;
    /** @type {?} */
    CarouselComponent.prototype.carouselItems;
    /**
     * Enable autoChange of carousel items
     * @type {?}
     */
    CarouselComponent.prototype.autochange;
    /**
     * Enable transit animation
     * @type {?}
     */
    CarouselComponent.prototype.animationType;
    /**
     * Period for autoChange
     * @type {?}
     */
    CarouselComponent.prototype.period;
    /** @type {?} */
    CarouselComponent.prototype._activeIndex;
    /** @type {?} */
    CarouselComponent.prototype._subscriber;
    /** @type {?} */
    CarouselComponent.prototype._isAnimation;
}
//# sourceMappingURL=data:application/json;base64,