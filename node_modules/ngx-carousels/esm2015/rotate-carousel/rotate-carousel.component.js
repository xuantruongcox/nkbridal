/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ContentChildren, QueryList, ViewChild, ElementRef } from '@angular/core';
import { timer } from 'rxjs';
import { RotateCarouselItemDirective } from './rotate-carousel-item.directive';
/** @type {?} */
const DEFAULT_WIDTH = '300px';
/** @type {?} */
const DEFAULT_HEIGHT = '200px';
/** @type {?} */
const DEFAULT_DEPTH = '510px';
/** @type {?} */
const DEFAULT_PERIOD = 3500;
/** @type {?} */
const FULL_ANGLE = 360;
export class RotateCarouselComponent {
    constructor() {
        /**
         * Emit event of rotation start
         */
        this.rotationStart = new EventEmitter();
        /**
         * Emit event of rotation end
         */
        this.rotationEnd = new EventEmitter();
        /**
         * Width of content in carousel item
         */
        this.width = DEFAULT_WIDTH;
        /**
         * Height of content in carousel item
         */
        this.height = DEFAULT_HEIGHT;
        /**
         * Depth of the center of carousel
         */
        this.depth = DEFAULT_DEPTH;
        /**
         * Period of carousel rotation
         */
        this.period = DEFAULT_PERIOD;
        /**
         * Direction of rotation
         */
        this.direction = 'forward';
        this._activeIndex = 0;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.calcItemsAngle();
        this.setupRotation();
        //this.calcHeight();
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        this.setupRotation();
        //this.calcHeight();
    }
    //***************************************************************************************************************
    //-Setup---------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    calcItemsAngle() {
        this._angleStep = FULL_ANGLE / this.rotateItems.length;
        /** @type {?} */
        let angle = 0;
        this.rotateItems.forEach(x => {
            x.angle = angle;
            angle += this._angleStep;
        });
    }
    /**
     * @return {?}
     */
    setupRotation() {
        if (!Number.isNaN((/** @type {?} */ (this.period)) % 1))
            this._period = parseInt((/** @type {?} */ (this.period)));
        else {
            /** @type {?} */
            const periodStr = (/** @type {?} */ (this.period));
            // split string like '1003ms' to '1000' and 'ms'
            /** @type {?} */
            const values = periodStr.replace(/\'/g, '').split(/([0-9]*\.?[0-9])/);
            this._period = values[2] == 's' ? parseInt(values[1]) * 1000 : parseInt(values[1]);
        }
        if (this._rotationTimerSubscription)
            this._rotationTimerSubscription.unsubscribe();
        this._rotationTimerSubscription = this.setRotationTimer();
    }
    /**
     * @return {?}
     */
    calcHeight() {
        /** @type {?} */
        const maxH = Math.max(null, ...this.rotateItems.map(x => x.templateRef.elementRef.nativeElement.clientHeight));
        if (!this.height)
            this.height = maxH + 'px';
    }
    //***************************************************************************************************************
    //-Events--------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    onRotationStart() {
        this.rotationStart.emit(this._activeIndex);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onRotateEnd($event) {
        if (this._activeIndex == 0) {
            this.carouselInner.nativeElement.style.transition = 'none';
            this.carouselInner.nativeElement.style.transform = 'rotateY(0deg)';
        }
        this.rotationEnd.emit(this._activeIndex);
    }
    //***************************************************************************************************************
    //-Style-Visibility-Availability---------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    getCarouselStyle() {
        /** @type {?} */
        const width = this.width;
        /** @type {?} */
        const height = this.height;
        /** @type {?} */
        const depth = this.depth;
        return { width: width, height: height, transform: 'translateZ(-' + depth + ')' };
    }
    /**
     * @param {?} item
     * @return {?}
     */
    getItemStyle(item) {
        /** @type {?} */
        const depth = this.depth;
        /** @type {?} */
        const style = { transform: 'rotateY(' + item.angle + 'deg) translateZ(' + depth + ')' };
        return style;
    }
    //***************************************************************************************************************
    //-Methods-------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @param {?} indexPath
     * @return {?}
     */
    selectAt(indexPath) {
        this._rotationTimerSubscription.unsubscribe();
        this.carouselInner.nativeElement.style.transform = `rotateY(${indexPath * this._angleStep}deg)`;
        this._rotationTimerSubscription = this.setRotationTimer();
    }
    //***************************************************************************************************************
    //-Help----------------------------------------------------------------------------------------------------------
    //***************************************************************************************************************
    /**
     * @return {?}
     */
    setRotationTimer() {
        return timer(0, this._period)
            .subscribe((i) => {
            this._activeIndex = i % this.rotateItems.length;
            /** @type {?} */
            let angle;
            if (this._activeIndex == 1)
                this.carouselInner.nativeElement.style.transition = `transform ${this._period / 2}ms ease-in-out`;
            if (i > 0 && this._activeIndex == 0)
                angle = this.rotateItems.length * this._angleStep * (this.direction == 'forward' ? -1 : 1);
            else
                angle = this._activeIndex * this._angleStep * (this.direction == 'forward' ? -1 : 1);
            this.carouselInner.nativeElement.style.transform = `rotateY(${angle}deg)`;
            this.onRotationStart();
        });
    }
}
RotateCarouselComponent.decorators = [
    { type: Component, args: [{
                selector: 'rotate-carousel',
                template: "<figure class=\"carousel\">\r\n    <div class=\"carousel__content\" [ngStyle]=\"getCarouselStyle()\">\r\n        <div #carouselInner class=\"carousel__inner\" (transitionend)=\"onRotateEnd($event)\">\r\n            <ng-template ngFor let-item [ngForOf]=\"rotateItems\">\r\n                <div class=\"carousel__item\" [ngStyle]=\"getItemStyle(item)\">\r\n                    <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</figure>",
                styles: [":host{width:100%}.carousel{display:flex;justify-content:center;-webkit-perspective:1000px;perspective:1000px}.carousel__content{-webkit-transform:translateZ(-40vw);transform:translateZ(-40vw);-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.carousel__inner{height:100%;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.carousel__item{display:flex;align-items:center;position:absolute;height:100%;width:100%}.carousel__item img{height:100%;width:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:center;object-position:center;border-radius:15px}"]
            }] }
];
RotateCarouselComponent.propDecorators = {
    rotateItems: [{ type: ContentChildren, args: [RotateCarouselItemDirective,] }],
    carouselInner: [{ type: ViewChild, args: ['carouselInner',] }],
    rotationStart: [{ type: Output }],
    rotationEnd: [{ type: Output }],
    width: [{ type: Input }],
    height: [{ type: Input }],
    depth: [{ type: Input }],
    period: [{ type: Input }],
    direction: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RotateCarouselComponent.prototype.rotateItems;
    /** @type {?} */
    RotateCarouselComponent.prototype.carouselInner;
    /**
     * Emit event of rotation start
     * @type {?}
     */
    RotateCarouselComponent.prototype.rotationStart;
    /**
     * Emit event of rotation end
     * @type {?}
     */
    RotateCarouselComponent.prototype.rotationEnd;
    /**
     * Width of content in carousel item
     * @type {?}
     */
    RotateCarouselComponent.prototype.width;
    /**
     * Height of content in carousel item
     * @type {?}
     */
    RotateCarouselComponent.prototype.height;
    /**
     * Depth of the center of carousel
     * @type {?}
     */
    RotateCarouselComponent.prototype.depth;
    /**
     * Period of carousel rotation
     * @type {?}
     */
    RotateCarouselComponent.prototype.period;
    /**
     * Direction of rotation
     * @type {?}
     */
    RotateCarouselComponent.prototype.direction;
    /** @type {?} */
    RotateCarouselComponent.prototype._period;
    /** @type {?} */
    RotateCarouselComponent.prototype._angleStep;
    /** @type {?} */
    RotateCarouselComponent.prototype._rotationTimerSubscription;
    /** @type {?} */
    RotateCarouselComponent.prototype._activeIndex;
}
//# sourceMappingURL=data:application/json;base64,