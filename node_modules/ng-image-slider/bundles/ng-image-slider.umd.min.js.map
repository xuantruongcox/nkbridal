{"version":3,"sources":["ng://ng-image-slider/lib/ng-image-slider.service.ts","ng://ng-image-slider/lib/ng-image-slider.component.ts","ng://ng-image-slider/lib/slider-custom-image/slider-custom-image.component.ts","ng://ng-image-slider/lib/slider-lightbox/slider-lightbox.component.ts","ng://ng-image-slider/lib/ng-image-slider.module.ts"],"names":["NgImageSliderService","Injectable","youtubeRegExp","validFileExtensions","validVideoExtensions","NgImageSliderComponent","cdRef","platformId","this","EventEmitter","Object","defineProperty","prototype","data","hasOwnProperty","sliderImageWidth","sliderImageSizeWithPadding","sliderImageHeight","speed","effectStyle","imgObj","length","imageObj","imageParentDivWidth","count","slideImageCount","Math","round","autoSlideCount","flag","undefined","showArrowButton","onResize","event","setSliderWidth","handleKeyboardEvent","key","toLowerCase","ligthboxShow","nextImage","prevImage","close","ngOnInit","infinite","leftPos","i","unshift","ngAfterViewInit","detectChanges","isPlatformBrowser","imageAutoSlide","ngOnDestroy","autoSlideInterval","clearInterval","ngOnChanges","changes","size","previousValue","currentValue","width","height","imageDiv","nativeElement","offsetWidth","sliderMain","sliderMainDivWidth","nextPrevSliderButtonDisable","imageOnClick","index","imagePopup","activeImageIndex","showLightbox","imageClick","emit","_this","setInterval","next","imageMouseEnterHandler","prev","sliderPrevDisable","infinitePrevImg","prevImg","arrowClick","sliderArrowDisableTeam","sliderNextDisable","infiniteNextImg","nextImg","setTimeout","pop","push","shift","imageSrc","imageTitle","getImage","nextPrevLigthboxButtonDisable","lightboxArrowClick","message","lightboxNextDisable","lightboxPrevDisable","url","title","self","currentImageSrc","showImage","fileExtension","replace","match","indexOf","currentImageTitle","image","Image","onload","src","swipe","e","when","coord","changedTouches","pageX","pageY","time","Date","getTime","swipeCoord","swipeTime","direction","abs","Component","args","selector","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","decorators","type","Inject","PLATFORM_ID","ViewChild","Input","Output","HostListener","SliderCustomImageComponent","IMAGE","fileUrl","YOUTUBE","VIDEO","SliderLightboxComponent","sanitizer","match_1","bypassSecurityTrustResourceUrl","resetState","closeLightbox","prevImageLightbox","nextImageLightbox","DomSanitizer","NgImageSliderModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgImageSliderService {\n\n  constructor() { }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    OnInit,\n    OnChanges,\n    SimpleChanges,\n    SimpleChange,\n    AfterViewInit,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewEncapsulation,\n    ViewChild,\n    HostListener,\n    PLATFORM_ID,\n    Inject,\n    ElementRef\n} from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\nconst NEXT_ARROW_CLICK_MESSAGE = 'next',\n    PREV_ARROW_CLICK_MESSAGE = 'previous',\n    LIGHTBOX_NEXT_ARROW_CLICK_MESSAGE = 'lightbox next',\n    LIGHTBOX_PREV_ARROW_CLICK_MESSAGE = 'lightbox previous',\n    youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'ng-image-slider',\n    template: `\n    <div class=\"ng-image-slider\"\n        [ngStyle]=\"{'height':sliderImageHeight+'px'}\">\n        <div class=\"container\">\n            <div class=\"main\"\n                [ngStyle]=\"{'height':sliderImageHeight+'px'}\"\n                #sliderMain>\n                <div class=\"main-inner\"\n                    [ngStyle]=\"{'margin-left':leftPos+'px', 'width':imageParentDivWidth+'px', 'transition': effectStyle}\"\n                    (touchstart)=\"swipe($event, 'start')\"\n                    (touchend)=\"swipe($event, 'end')\">\n                    <div [ngClass]=\"{'image-popup': imagePopup}\"\n                        [ngStyle]=\"{'width':sliderImageWidth+'px', 'height':sliderImageHeight+'px'}\"\n                        class=\"img-div\"\n                        *ngFor=\"let img of imageObj; let i = index\"\n                        (click)=\"imageOnClick(i)\"\n                        (mouseenter)=\"imageMouseEnterHandler()\"\n                        (mouseleave)=\"imageAutoSlide()\"\n                        #imageDiv>\n                        <custom-img [imageUrl]=\"img.thumbImage || img.posterImage || img.video\"\n                            [isVideo]=\"!!(img.posterImage || img.video)\">\n                        </custom-img>\n                        <div class=\"caption\" *ngIf=\"img.title\">{{ img.title }}</div>\n                    </div>\n                </div>\n                <a *ngIf=\"showArrowButton\"\n                    [ngClass]=\"{'disable': sliderPrevDisable}\"\n                    class=\"prev icons prev-icon\"\n                    (click)=\"prev()\"\n                    (mouseenter)=\"imageMouseEnterHandler()\"\n                    (mouseleave)=\"imageAutoSlide()\">&lsaquo;</a>\n                <a *ngIf=\"showArrowButton\"\n                    [ngClass]=\"{'disable': sliderNextDisable}\"\n                    class=\"next icons next-icon\"\n                    (click)=\"next()\"\n                    (mouseenter)=\"imageMouseEnterHandler()\"\n                    (mouseleave)=\"imageAutoSlide()\">&rsaquo;</a>\n            </div>\n        </div>\n    </div>\n    <slider-lightbox *ngIf=\"ligthboxShow\"\n        [currentImageSrc]=\"currentImageSrc\"\n        [currentImageTitle]=\"currentImageTitle\"\n        [showImage]=\"showImage\"\n        [lightboxPrevDisable]=\"lightboxPrevDisable\"\n        [lightboxNextDisable]=\"lightboxNextDisable\"\n        (close)=\"close()\"\n        (prevImage)=\"prevImage()\"\n        (nextImage)=\"nextImage()\">\n    </slider-lightbox>\n    `,\n    styleUrls: ['./ng-image-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgImageSliderComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n    // for slider\n    sliderMainDivWidth: number = 0;\n    imageParentDivWidth: number = 0;\n    imageObj: Array<object> = [];\n    leftPos: number = 0;\n    effectStyle: string = 'all 1s ease-in-out';\n    speed: number = 1; // default speed in second\n    sliderPrevDisable: boolean = false;\n    sliderNextDisable: boolean = false;\n    slideImageCount: number = 1;\n    sliderImageWidth: number = 205;\n    sliderImageHeight: number = 200;\n    sliderImageSizeWithPadding = 211;\n    autoSlideCount: number = 0;\n    autoSlideInterval;\n    showArrowButton: boolean = true;\n\n    // for swipe event\n    private swipeCoord?: [number, number];\n    private swipeTime?: number;\n\n    @ViewChild('sliderMain') sliderMain;\n    @ViewChild('imageDiv') imageDiv;\n\n    // @inputs\n    @Input()\n    set imageSize(data) {\n        if (data\n            && typeof (data) === 'object') {\n            if (data.hasOwnProperty('width') && typeof (data['width']) === 'number') {\n                this.sliderImageWidth = data['width'];\n                this.sliderImageSizeWithPadding = data['width'] + 6; // addeing padding with image width\n            }\n            if (data.hasOwnProperty('height') && typeof (data['height']) === 'number') {\n                this.sliderImageHeight = data['height'];\n            }\n        }\n    }\n    @Input() infinite: boolean = false;\n    @Input() imagePopup: boolean = true;\n    @Input()\n    set animationSpeed(data: number) {\n        if (data\n            && typeof (data) === 'number'\n            && data >= 0.1\n            && data <= 5) {\n            this.speed = data;\n            this.effectStyle = `all ${this.speed}s ease-in-out`;\n        }\n    }\n    @Input() set images(imgObj) {\n        if (imgObj && imgObj.length) {\n            this.imageObj = imgObj;\n            this.imageParentDivWidth = imgObj.length * this.sliderImageSizeWithPadding;\n        }\n    }\n    @Input() set slideImage(count) {\n        if (count && typeof count === 'number') {\n            this.slideImageCount = Math.round(count);\n        }\n    }\n    @Input() set autoSlide(count) {\n        if (count && typeof count === 'number' && count >= 1 && count <= 5) {\n            this.autoSlideCount = Math.round(count) * 1000;\n        }\n    }\n    @Input() set showArrow(flag) {\n        if (flag !== undefined && typeof flag === 'boolean') {\n            this.showArrowButton = flag;\n        }\n    }\n\n    // @Outputs\n    @Output() imageClick = new EventEmitter<number>();\n    @Output() arrowClick = new EventEmitter<string>();\n    @Output() lightboxArrowClick = new EventEmitter<object>();\n\n    // for lightbox\n    currentImageSrc: string;\n    currentImageTitle = '';\n    ligthboxShow: boolean = false;\n    activeImageIndex: number = 0;\n    lightboxNextDisable: boolean = false;\n    lightboxPrevDisable: boolean = false;\n    showImage: boolean = true;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.setSliderWidth();\n    }\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if (event.key.toLowerCase() === 'arrowright' && this.ligthboxShow) {\n            this.nextImage();\n        }\n\n        if (event.key.toLowerCase() === 'arrowleft' && this.ligthboxShow) {\n            this.prevImage();\n        }\n\n        if (event.key.toLowerCase() === 'escape' && this.ligthboxShow) {\n            this.close();\n        }\n    }\n\n    constructor(\n        private cdRef: ChangeDetectorRef,\n        @Inject(PLATFORM_ID) private platformId: Object,\n        // @Inject(ElementRef) private _elementRef: ElementRef\n    ) {\n    }\n\n    ngOnInit() {\n        // @TODO: for future use\n        // console.log(this._elementRef)\n\n        // for slider\n        if (this.infinite) {\n            this.effectStyle = 'none';\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n            for (let i = 1; i <= this.slideImageCount; i++) {\n                this.imageObj.unshift(this.imageObj[this.imageObj.length - i]);\n            }\n        }\n    }\n\n    // for slider\n    ngAfterViewInit() {\n        this.setSliderWidth();\n        this.cdRef.detectChanges();\n        if (isPlatformBrowser(this.platformId)) {\n            this.imageAutoSlide();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.autoSlideInterval) {\n            clearInterval(this.autoSlideInterval);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes && changes.imageSize) {\n            const size: SimpleChange = changes.imageSize;\n            if (size\n                && size.previousValue\n                && size.currentValue\n                && size.previousValue.width && size.previousValue.height\n                && size.currentValue.width && size.currentValue.height\n                && (size.previousValue.width !== size.currentValue.width\n                || size.previousValue.height !== size.currentValue.height)) {\n                this.setSliderWidth();\n            }\n        }\n    }\n\n    setSliderWidth() {\n        if (this.imageDiv.nativeElement.offsetWidth) {\n            this.imageParentDivWidth = this.imageObj.length * this.sliderImageSizeWithPadding;\n            this.leftPos = this.infinite ? -1 * this.sliderImageSizeWithPadding * this.slideImageCount : 0;\n        }\n        if (this.sliderMain.nativeElement.offsetWidth) {\n            this.sliderMainDivWidth = this.sliderMain.nativeElement.offsetWidth;\n        }\n        this.nextPrevSliderButtonDisable();\n    }\n\n    imageOnClick(index) {\n        if (this.imagePopup) {\n            this.activeImageIndex = index;\n            this.showLightbox();\n        }\n        this.imageClick.emit(index);\n    }\n\n    imageAutoSlide() {\n        if (this.infinite && this.autoSlideCount && !this.ligthboxShow) {\n            this.autoSlideInterval = setInterval(() => {\n                this.next();\n            }, this.autoSlideCount);\n        }\n    }\n\n    imageMouseEnterHandler() {\n        if (this.infinite && this.autoSlideCount && this.autoSlideInterval) {\n            clearInterval(this.autoSlideInterval);\n        }\n    }\n\n    prev() {\n        if (!this.sliderPrevDisable) {\n            if (this.infinite) {\n                this.infinitePrevImg();\n            } else {\n                this.prevImg();\n            }\n\n            this.arrowClick.emit(PREV_ARROW_CLICK_MESSAGE);\n            this.sliderArrowDisableTeam();\n        }\n    }\n\n    next() {\n        if (!this.sliderNextDisable) {\n            if (this.infinite) {\n                this.infiniteNextImg();\n            } else {\n                this.nextImg();\n            }\n\n            this.arrowClick.emit(NEXT_ARROW_CLICK_MESSAGE);\n            this.sliderArrowDisableTeam();\n        }\n    }\n\n    prevImg() {\n        if (0 >= this.leftPos + (this.sliderImageSizeWithPadding * this.slideImageCount)) {\n            this.leftPos += this.sliderImageSizeWithPadding * this.slideImageCount;\n        } else {\n            this.leftPos = 0;\n        }\n    }\n\n    nextImg() {\n        if ((this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth > this.sliderImageSizeWithPadding * this.slideImageCount) {\n            this.leftPos -= this.sliderImageSizeWithPadding * this.slideImageCount;\n        } else if ((this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth > 0) {\n            this.leftPos -= (this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth;\n        }\n    }\n\n    infinitePrevImg() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        this.leftPos = 0;\n\n        setTimeout(() => {\n            this.effectStyle = 'none';\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n            for (let i = 0; i < this.slideImageCount; i++) {\n                this.imageObj.unshift(this.imageObj[this.imageObj.length - this.slideImageCount - 1]);\n                this.imageObj.pop();\n            }\n        }, this.speed * 1000);\n    }\n\n    infiniteNextImg() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        this.leftPos = -2 * this.sliderImageSizeWithPadding * this.slideImageCount;\n        setTimeout(() => {\n            this.effectStyle = 'none';\n            for (let i = 0; i < this.slideImageCount; i++) {\n                this.imageObj.push(this.imageObj[this.slideImageCount]);\n                this.imageObj.shift();\n            }\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n        }, this.speed * 1000);\n    }\n\n    /**\n     * Disable slider left/right arrow when image moving\n     */\n    sliderArrowDisableTeam() {\n        this.sliderNextDisable = true;\n        this.sliderPrevDisable = true;\n        setTimeout(() => {\n            this.nextPrevSliderButtonDisable();\n        }, this.speed * 1000);\n    }\n\n    nextPrevSliderButtonDisable() {\n        this.sliderNextDisable = false;\n        this.sliderPrevDisable = false;\n        if (!this.infinite) {\n            if (this.imageParentDivWidth + this.leftPos <= this.sliderMainDivWidth) {\n                this.sliderNextDisable = true;\n            }\n\n            if (this.leftPos >= 0) {\n                this.sliderPrevDisable = true;\n            }\n        }\n    }\n\n    // for lightbox\n    showLightbox() {\n        if (this.imageObj.length && (this.imageObj[0]['image'] || this.imageObj[0]['video'])) {\n            let imageSrc = this.imageObj[0]['image'] || this.imageObj[0]['video'],\n                imageTitle = this.imageObj[0]['title'] || '';\n            if (this.imageObj[this.activeImageIndex]) {\n                imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n                imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            }\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.imageMouseEnterHandler();\n            this.ligthboxShow = true;\n        }\n    }\n\n    nextImage() {\n        if (this.infinite && this.activeImageIndex + 1 >= this.imageObj.length) {\n            this.activeImageIndex = 0;\n        }\n\n        if (this.activeImageIndex + 1 < this.imageObj.length\n            && this.imageObj[this.activeImageIndex + 1]\n            && (this.imageObj[this.activeImageIndex + 1]['image']\n            || this.imageObj[this.activeImageIndex + 1]['video'])) {\n            this.activeImageIndex++;\n            const imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n            const imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.lightboxArrowClick.emit({\n                message: LIGHTBOX_NEXT_ARROW_CLICK_MESSAGE,\n                index: this.activeImageIndex\n            });\n        }\n    }\n\n    prevImage() {\n        if (this.infinite && this.activeImageIndex - 1 <= 0) {\n            this.activeImageIndex = this.imageObj.length;\n        }\n\n        if (this.activeImageIndex - 1 > -1\n            && this.imageObj[this.activeImageIndex - 1]\n            && (this.imageObj[this.activeImageIndex - 1]['image']\n            || this.imageObj[this.activeImageIndex - 1]['video'])) {\n            this.activeImageIndex--;\n            const imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n            const imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.lightboxArrowClick.emit({\n                message: LIGHTBOX_PREV_ARROW_CLICK_MESSAGE,\n                index: this.activeImageIndex\n            });\n        }\n    }\n\n    nextPrevLigthboxButtonDisable() {\n        this.lightboxNextDisable = false;\n        this.lightboxPrevDisable = false;\n        if (!this.infinite) {\n            if (this.activeImageIndex >= this.imageObj.length - 1) {\n                this.lightboxNextDisable = true;\n            }\n\n            if (this.activeImageIndex <= 0) {\n                this.lightboxPrevDisable = true;\n            }\n        }\n    }\n\n    close() {\n        this.ligthboxShow = false;\n        this.imageAutoSlide();\n    }\n\n    getImage(url, title = '') {\n        const self = this;\n        this.currentImageSrc = '';\n        this.showImage = false;\n        if (url) {\n            const fileExtension = url.replace(/^.*\\./, '');\n            // verify for youtube and video url\n            const match = url.match(youtubeRegExp);\n            if ((match && match[2].length === 11)\n                || (fileExtension && validVideoExtensions.indexOf(fileExtension.toLowerCase()) > -1)) {\n                this.currentImageSrc = url;\n                this.currentImageTitle = title;\n                this.showImage = true;\n            } else if (fileExtension && validFileExtensions.indexOf(fileExtension.toLowerCase()) > -1) {\n                const image = new Image();\n                image.onload = function () {\n                    setTimeout(() => {\n                        self.currentImageSrc = url;\n                        self.currentImageTitle = title;\n                        self.showImage = true;\n                    }, 0);\n                };\n                image.src = url;\n            }\n        }\n    }\n\n    /**\n     * Swipe event handler\n     * Reference from https://stackoverflow.com/a/44511007/2067646\n     */\n    swipe(e: TouchEvent, when: string): void {\n        const coord: [number, number] = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const time = new Date().getTime();\n\n        if (when === 'start') {\n            this.swipeCoord = coord;\n            this.swipeTime = time;\n        } else if (when === 'end') {\n            const direction = [coord[0] - this.swipeCoord[0], coord[1] - this.swipeCoord[1]];\n            const duration = time - this.swipeTime;\n\n            if (duration < 1000 //\n                && Math.abs(direction[0]) > 30 // Long enough\n                && Math.abs(direction[0]) > Math.abs(direction[1] * 3)) { // Horizontal enough\n                if (direction[0] < 0) {\n                    this.next();\n                } else {\n                    this.prev();\n                }\n            }\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Input\n} from '@angular/core';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'custom-img',\n    templateUrl: './slider-custom-image.component.html'\n})\nexport class SliderCustomImageComponent implements OnInit, AfterViewInit, OnDestroy {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @inputs\n    @Input()\n    set imageUrl(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileUrl = url;\n            this.fileExtension = url.replace(/^.*\\./, '');\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                this.type = this.YOUTUBE;\n                this.fileUrl = `https://img.youtube.com/vi/${match[2]}/0.jpg`;\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.VIDEO;\n            }\n        }\n    }\n    @Input() isVideo = false;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    HostListener\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'slider-lightbox',\n    templateUrl: './slider-lightbox.component.html'\n})\nexport class SliderLightboxComponent implements OnInit, AfterViewInit, OnDestroy {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl: SafeResourceUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @Inputs\n    @Input()\n    set currentImageSrc(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileExtension = url.replace(/^.*\\./, '');\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                this.type = '';\n                setTimeout(() => {\n                    this.type = this.YOUTUBE;\n                    url = `${'//www.youtube.com/embed/'}${match[2]}`;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n                }, 50);\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n                this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = '';\n                setTimeout(() => {\n                    this.type = this.VIDEO;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n                }, 50);\n            }\n        }\n    }\n    @Input() currentImageTitle;\n    @Input() showImage;\n    @Input() lightboxPrevDisable;\n    @Input() lightboxNextDisable;\n\n    // @Output\n    @Output() close = new EventEmitter<any>();\n    @Output() prevImage = new EventEmitter<any>();\n    @Output() nextImage = new EventEmitter<any>();\n\n    /* @ViewChild('lightboxDiv') lightboxDiv;\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        const widthAspectRatio = 16 / 9;\n        const heightAspectRatio = 9 / 16;\n        console.log('this.lightboxDiv.nativeElement.offsetWidth', this.lightboxDiv.nativeElement.offsetWidth);\n        console.log('this.lightboxDiv.nativeElement.offsetHeight', this.lightboxDiv.nativeElement.offsetHeight);\n        if (this.lightboxDiv.nativeElement.offsetWidth && this.lightboxDiv.nativeElement.offsetHeight) {\n            const calculatedWidth = 480 * (this.lightboxDiv.nativeElement.offsetWidth / this.lightboxDiv.nativeElement.offsetHeight);\n            const calculatedHeight = 385 * (this.lightboxDiv.nativeElement.offsetHeight / this.lightboxDiv.nativeElement.offsetWidth);\n            console.log('calculated widht and height =>', calculatedWidth, calculatedHeight);\n\n        }\n    } */\n\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n       this.resetState();\n    }\n\n    closeLightbox() {\n        this.close.emit();\n    }\n\n    prevImageLightbox() {\n        this.prevImage.emit();\n    }\n\n    nextImageLightbox() {\n        this.nextImage.emit();\n    }\n\n    resetState() {\n        this.fileUrl = '';\n        this.fileExtension = '';\n        this.type = this.IMAGE;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgImageSliderComponent } from './ng-image-slider.component';\nimport { SliderCustomImageComponent } from './slider-custom-image/slider-custom-image.component';\nimport { SliderLightboxComponent } from './slider-lightbox/slider-lightbox.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NgImageSliderComponent,\n        SliderCustomImageComponent,\n        SliderLightboxComponent\n    ],\n    exports: [NgImageSliderComponent]\n})\nexport class NgImageSliderModule { }\n"]}