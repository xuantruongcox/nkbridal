{"version":3,"sources":["ng://ngx-drag-scroll/lib/ngx-drag-scroll-item.ts","ng://ngx-drag-scroll/lib/ngx-drag-scroll.component.ts","ng://ngx-drag-scroll/lib/ngx-drag-scroll.module.ts"],"names":["DragScrollItemDirective","elementRef","this","display","_dragDisabled","_elementRef","Object","defineProperty","prototype","value","Directive","args","selector","ElementRef","decorators","type","Inject","HostBinding","Input","DragScrollComponent","_renderer","_document","_index","_scrollbarHidden","_disabled","_xDisabled","_xWheelEnabled","_yDisabled","_snapDisabled","_snapOffset","_snapDuration","isPressed","isScrolling","scrollTimer","scrollToTimer","downX","downY","displayType","elWidth","elHeight","scrollbarWidth","isAnimating","prevChildrenLength","indexBound","dsInitialized","EventEmitter","indexChanged","reachesLeftBound","reachesRightBound","snapAnimationFinished","getScrollbarWidth","emit","ngOnChanges","setScrollBar","xDisabled","disabled","disableScroll","enableScroll","yDisabled","ngAfterViewInit","setAttribute","_contentRef","nativeElement","window","getComputedStyle","setStyle","markElDimension","wrapper","checkScrollbar","_onMouseDownListener","listen","onMouseDownHandler","bind","_onTouchStartListener","_onScrollListener","onScrollHandler","_onTouchEndListener","onMouseUpHandler","_onDragStartListener","e","preventDefault","checkNavStatus","adjustMarginToLastChild","ngAfterViewChecked","_children","length","ngOnDestroy","onMouseMoveHandler","event","onMouseMove","isTouchEvent","mouseEvent","buttons","which","dragDisabled","clientX","touches","scrollLeft","clientY","scrollTop","dragScrollItem","locateDragScrollItem","_startGlobalListening","touchEvent","clearTimeout","_this","snapDisabled","locateCurrentIndex","setTimeout","_stopGlobalListening","moveLeft","currIndex","scrollTo","toChildrenLocation","snapDuration","moveRight","container","parentNode","containerWidth","clientWidth","isScrollReachesRightEnd","maximumIndex","moveTo","index","Math","min","onlyOneItem","Boolean","containerIsLargerThanContent","scrollWidth","onWheel","scrollBy","deltaY","onWindowResize","refreshWrapperDimensions","_onMouseMoveListener","eventName","_onMouseUpListener","axis","hideScrollbar","style","createElement","addClass","appendChild","showScrollbar","height","removeChild","scrollHeight","clientHeight","scrollbarHidden","outer","body","widthNoScroll","offsetWidth","inner","widthWithScroll","offsetHeight","element","to","duration","self","start","change","snapOffset","currentTime","animateScroll","t","b","c","snap","currentChildWidth","nextChildrenWidth","childrenWidth","idx","stop","cb","shouldBreak","breakFunc","i","currentClildWidth","item","width","childrenElements","count","dragScrollItemDirective","lastItem","Component","template","Renderer2","DOCUMENT","ViewChild","ContentChildren","Output","HostListener","DragScrollModule","NgModule","exports","declarations"],"mappings":"iVAAA,IAAAA,EAAA,WAiBE,SAAAA,EACsBC,GAXtBC,KAAAC,QAAU,eAMVD,KAAAE,eAAgB,EAOdF,KAAKG,YAAcJ,EAEvB,OAbEK,OAAAC,eACIP,EAAAQ,UAAA,eAAY,KADhB,WACqB,OAAON,KAAKE,mBACjC,SAAiBK,GAAkBP,KAAKE,cAAgBK,uDATzDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kEAHQC,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KAkBzBC,EAAAA,OAAML,KAAA,CAACE,EAAAA,kDAZTI,EAAAA,YAAWN,KAAA,CAAC,uCAGZO,EAAAA,MAAKP,KAAA,CAAC,oBAaTX,EAtBA,GCAAmB,EAAA,WAqME,SAAAA,EAC8Bd,EACDe,EACDC,GAFEnB,KAAAG,YAAAA,EACDH,KAAAkB,UAAAA,EACDlB,KAAAmB,UAAAA,EA/JpBnB,KAAAoB,OAAS,EAETpB,KAAAqB,kBAAmB,EAEnBrB,KAAAsB,WAAY,EAEZtB,KAAAuB,YAAa,EAEbvB,KAAAwB,gBAAiB,EAEjBxB,KAAAyB,YAAa,EAEbzB,KAAAE,eAAgB,EAEhBF,KAAA0B,eAAgB,EAEhB1B,KAAA2B,YAAc,EAEd3B,KAAA4B,cAAgB,IAmBxB5B,KAAA6B,WAAY,EAKZ7B,KAAA8B,aAAc,EAEd9B,KAAA+B,aAAsC,EAEtC/B,KAAAgC,eAAwC,EAKxChC,KAAAiC,MAAQ,EAKRjC,KAAAkC,MAAQ,EAERlC,KAAAmC,YAA6B,QAE7BnC,KAAAoC,QAAyB,KAEzBpC,KAAAqC,SAA0B,KAiB1BrC,KAAAsC,eAAgC,KAUhCtC,KAAAuC,aAAc,EAEdvC,KAAAwC,mBAAqB,EAErBxC,KAAAyC,WAAa,EAEHzC,KAAA0C,cAAgB,IAAIC,EAAAA,aAEpB3C,KAAA4C,aAAe,IAAID,EAAAA,aAEnB3C,KAAA6C,iBAAmB,IAAIF,EAAAA,aAEvB3C,KAAA8C,kBAAoB,IAAIH,EAAAA,aAExB3C,KAAA+C,sBAAwB,IAAIJ,EAAAA,aA0DpC3C,KAAKsC,eAAoBtC,KAAKgD,oBAAmB,KAkjBrD,OAloBE5C,OAAAC,eAAIY,EAAAX,UAAA,YAAS,KAAb,WAAkB,OAAON,KAAKoB,YAC9B,SAAcb,GACRA,IAAUP,KAAKoB,SACjBpB,KAAKoB,OAASb,EACdP,KAAK4C,aAAaK,KAAK1C,qCAuB3BH,OAAAC,eACIY,EAAAX,UAAA,kBAAe,KADnB,WACwB,OAAON,KAAKqB,sBACpC,SAAoBd,GAAkBP,KAAKqB,iBAAmBd,mCAK9DH,OAAAC,eACIY,EAAAX,UAAA,WAAQ,KADZ,WACiB,OAAON,KAAKsB,eAC7B,SAAaf,GAAkBP,KAAKsB,UAAYf,mCAKhDH,OAAAC,eACIY,EAAAX,UAAA,YAAS,KADb,WACkB,OAAON,KAAKuB,gBAC9B,SAAchB,GAAkBP,KAAKuB,WAAahB,mCAKlDH,OAAAC,eACIY,EAAAX,UAAA,YAAS,KADb,WACkB,OAAON,KAAKyB,gBAC9B,SAAclB,GAAkBP,KAAKyB,WAAalB,mCAKlDH,OAAAC,eACIY,EAAAX,UAAA,gBAAa,KADjB,WACsB,OAAON,KAAKwB,oBAClC,SAAkBjB,GAAkBP,KAAKwB,eAAiBjB,mCAE1DH,OAAAC,eACIY,EAAAX,UAAA,eAAY,KADhB,WACqB,OAAON,KAAKE,mBACjC,SAAiBK,GAAkBP,KAAKE,cAAgBK,mCAExDH,OAAAC,eACIY,EAAAX,UAAA,eAAY,KADhB,WACqB,OAAON,KAAK0B,mBACjC,SAAiBnB,GAAkBP,KAAK0B,cAAgBnB,mCAExDH,OAAAC,eACIY,EAAAX,UAAA,aAAU,KADd,WACmB,OAAON,KAAK2B,iBAC/B,SAAepB,GAAiBP,KAAK2B,YAAcpB,mCAEnDH,OAAAC,eACIY,EAAAX,UAAA,eAAY,KADhB,WACqB,OAAON,KAAK4B,mBACjC,SAAiBrB,GAAiBP,KAAK4B,cAAgBrB,mCAUvDU,EAAAX,UAAA4C,YAAA,WACElD,KAAKmD,eAEDnD,KAAKoD,WAAapD,KAAKqD,SACzBrD,KAAKsD,cAAc,KAEnBtD,KAAKuD,aAAa,KAGhBvD,KAAKwD,WAAaxD,KAAKqD,SACzBrD,KAAKsD,cAAc,KAEnBtD,KAAKuD,aAAa,MAItBtC,EAAAX,UAAAmD,gBAAA,WAEEzD,KAAKkB,UAAUwC,aAAa1D,KAAK2D,YAAYC,cAAe,cAAe,QAE3E5D,KAAKmC,YAAgC,oBAAX0B,OAAyBA,OAAOC,iBAAiB9D,KAAKG,YAAYyD,eAAe3D,QAAU,QAErHD,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,UAAW5D,KAAKmC,aACxEnC,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,aAAc,UAGtE5D,KAAKgE,kBAELhE,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,QAAS5D,KAAKoC,SACtEpC,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,SAAU5D,KAAKqC,UAEnErC,KAAKiE,SACPjE,KAAKkE,iBAGPlE,KAAKmE,qBAAuBnE,KAAKkB,UAAUkD,OAAOpE,KAAK2D,YAAYC,cAAe,YAAa5D,KAAKqE,mBAAmBC,KAAKtE,OAC5HA,KAAKuE,sBAAwBvE,KAAKkB,UAAUkD,OAAOpE,KAAK2D,YAAYC,cAAe,aAAc5D,KAAKqE,mBAAmBC,KAAKtE,OAC9HA,KAAKwE,kBAAoBxE,KAAKkB,UAAUkD,OAAOpE,KAAK2D,YAAYC,cAAe,SAAU5D,KAAKyE,gBAAgBH,KAAKtE,OACnHA,KAAK0E,oBAAsB1E,KAAKkB,UAAUkD,OAAOpE,KAAK2D,YAAYC,cAAe,WAAY5D,KAAK2E,iBAAiBL,KAAKtE,OAExHA,KAAK4E,qBAAuB5E,KAAKkB,UAAUkD,OAAO,WAAY,YAAW,SAAGS,GAC1EA,EAAEC,mBAEJ9E,KAAK+E,iBACL/E,KAAK0C,cAAcO,OACnBjD,KAAKgF,2BAGP/D,EAAAX,UAAA2E,mBAAA,WAEMjF,KAAKkF,UAAoB,SAAEC,SAAWnF,KAAKwC,qBAE7CxC,KAAKgE,kBACLhE,KAAKkE,iBACLlE,KAAKwC,mBAAqBxC,KAAKkF,UAAoB,SAAEC,OACrDnF,KAAK+E,mBAIT9D,EAAAX,UAAA8E,YAAA,WACEpF,KAAKkB,UAAUwC,aAAa1D,KAAK2D,YAAYC,cAAe,cAAe,SACvE5D,KAAKmE,uBACPnE,KAAKmE,qBAAuBnE,KAAKmE,wBAE/BnE,KAAKuE,wBACPvE,KAAKuE,sBAAwBvE,KAAKuE,yBAEhCvE,KAAKwE,oBACPxE,KAAKwE,kBAAoBxE,KAAKwE,qBAE5BxE,KAAK0E,sBACP1E,KAAK0E,oBAAsB1E,KAAK0E,uBAE9B1E,KAAK4E,uBACP5E,KAAK4E,qBAAuB5E,KAAK4E,yBAIrC3D,EAAAX,UAAA+E,mBAAA,SAAmBC,GACjBtF,KAAKuF,YAAYD,IAGnBrE,EAAAX,UAAAiF,YAAA,SAAYD,GACV,GAAItF,KAAK6B,YAAc7B,KAAKqD,SAAU,KAC9BmC,EAA8B,cAAfF,EAAMzE,KAG3B,IAAK2E,EAAc,KACXC,EAAU,EAGhB,IAAKA,EAAWC,UAAYD,EAAWE,MACrC,OAAO3F,KAAK2E,iBAAiBc,GAKjC,IAAKzF,KAAKoD,YAAcpD,KAAK4F,aAAc,KACnCC,EAAUL,EAAe,EAAsBM,QAAQ,GAAGD,QAAU,EAAsBA,QAChG7F,KAAK2D,YAAYC,cAAcmC,WAC7B/F,KAAK2D,YAAYC,cAAcmC,WAAaF,EAAU7F,KAAKiC,MAC7DjC,KAAKiC,MAAQ4D,EAIf,IAAK7F,KAAKwD,YAAcxD,KAAK4F,aAAc,KACnCI,EAAUR,EAAe,EAAsBM,QAAQ,GAAGE,QAAU,EAAsBA,QAChGhG,KAAK2D,YAAYC,cAAcqC,UAC7BjG,KAAK2D,YAAYC,cAAcqC,UAAYD,EAAUhG,KAAKkC,MAC5DlC,KAAKkC,MAAQ8D,KAKnB/E,EAAAX,UAAA+D,mBAAA,SAAmBiB,OACXY,EAAiDlG,KAAKmG,qBAAqBb,EAAY,QAC7F,IAAIY,IAAkBA,EAAeN,aAArC,KAIMJ,EAA8B,eAAfF,EAAMzE,KAK3B,GAHAb,KAAKoG,sBAAsBZ,GAC3BxF,KAAK6B,WAAY,EAEb2D,EAAc,KACVa,EAAU,EAChBrG,KAAKiC,MAAQoE,EAAWP,QAAQ,GAAGD,QACnC7F,KAAKkC,MAAQmE,EAAWP,QAAQ,GAAGE,YAC9B,KACCP,EAAU,EAChBzF,KAAKiC,MAAQwD,EAAWI,QACxB7F,KAAKkC,MAAQuD,EAAWO,QAI1BM,aAAatG,KAAkB,iBAGjCiB,EAAAX,UAAAmE,gBAAA,WAAA,IAAA8B,EAAAvG,KACEA,KAAK+E,iBACA/E,KAAK6B,WAAc7B,KAAKuC,aAAgBvC,KAAKwG,aAQhDxG,KAAKyG,sBAPLzG,KAAK8B,aAAc,EACnBwE,aAAatG,KAAgB,aAC7BA,KAAK+B,YAAc2E,WAAU,WAC3BH,EAAKzE,aAAc,EACnByE,EAAKE,oBAAmB,IACvB,OAMPxF,EAAAX,UAAAqE,iBAAA,SAAiBW,GACXtF,KAAK6B,YACP7B,KAAK6B,WAAY,EACZ7B,KAAKwG,aAGRxG,KAAKyG,qBAFLzG,KAAKyG,oBAAmB,GAI1BzG,KAAK2G,yBAOT1F,EAAAX,UAAAsG,SAAA,YAC0B,IAAnB5G,KAAK6G,WAAmB7G,KAAKwG,gBAChCxG,KAAK6G,YACLP,aAAatG,KAAkB,eAC/BA,KAAK8G,SAAS9G,KAAK2D,YAAYC,cAAe5D,KAAK+G,qBAAsB/G,KAAKgH,gBAIlF/F,EAAAX,UAAA2G,UAAA,eACQC,EAAYlH,KAAKiE,SAAWjE,KAAKmH,WACjCC,EAAiBF,EAAYA,EAAUG,YAAc,GAEtDrH,KAAKsH,2BAA6BtH,KAAK6G,UAAY7G,KAAKuH,aAAaH,EAAgBpH,KAAKkF,aAC7FlF,KAAK6G,YACLP,aAAatG,KAAkB,eAC/BA,KAAK8G,SAAS9G,KAAK2D,YAAYC,cAAe5D,KAAK+G,qBAAsB/G,KAAKgH,gBAIlF/F,EAAAX,UAAAkH,OAAA,SAAOC,OACCP,EAAYlH,KAAKiE,SAAWjE,KAAKmH,WACjCC,EAAiBF,EAAYA,EAAUG,YAAc,EAEzDI,GAAS,GACTA,IAAUzH,KAAK6G,WACf7G,KAAK6G,WAAa7G,KAAKuH,aAAaH,EAAgBpH,KAAKkF,aAEzDlF,KAAK6G,UAAYa,KAAKC,IAAIF,EAAOzH,KAAKuH,aAAaH,EAAgBpH,KAAKkF,YACxEoB,aAAatG,KAAkB,eAC/BA,KAAK8G,SAAS9G,KAAK2D,YAAYC,cAAe5D,KAAK+G,qBAAsB/G,KAAKgH,gBAIlF/F,EAAAX,UAAAyE,eAAA,WAAA,IAAAwB,EAAAvG,KACE0G,WAAU,eACFkB,EAAcC,QAAQtB,EAAKrB,UAAoB,SAAEC,QAAU,GAC3D2C,EAA+BD,QAAQtB,EAAK5C,YAAYC,cAAcmE,aAC1ExB,EAAK5C,YAAYC,cAAcyD,aAC7BO,GAAeE,GAEjBvB,EAAK1D,iBAAiBI,MAAK,GAC3BsD,EAAKzD,kBAAkBG,MAAK,IACnBsD,EAAKe,2BAEdf,EAAK1D,iBAAiBI,MAAK,GAC3BsD,EAAKzD,kBAAkBG,MAAK,IAC2B,IAA9CsD,EAAK5C,YAAYC,cAAcmC,YACxCQ,EAAK5C,YAAYC,cAAcmE,YAAcxB,EAAK5C,YAAYC,cAAcyD,aAE5Ed,EAAK1D,iBAAiBI,MAAK,GAC3BsD,EAAKzD,kBAAkBG,MAAK,KAG5BsD,EAAK1D,iBAAiBI,MAAK,GAC3BsD,EAAKzD,kBAAkBG,MAAK,KAE7B,IAIEhC,EAAAX,UAAA0H,QADP,SACe1C,GACTtF,KAAKwB,iBACP8D,EAAMR,iBAEF9E,KAAK0B,cACP1B,KAAK2D,YAAYC,cAAcqE,SAAS3C,EAAM4C,OAAQ,GAElD5C,EAAM4C,OAAS,EACjBlI,KAAK4G,WACItB,EAAM4C,OAAS,GACxBlI,KAAKiH,cAONhG,EAAAX,UAAA6H,eADP,WAEEnI,KAAKoI,4BAGCnH,EAAAX,UAAA8F,sBAAR,SAA8BZ,GAC5B,IAAKxF,KAAKqI,qBAAsB,KACxBC,EAAY9C,EAAe,YAAc,YAC/CxF,KAAKqI,qBAAuBrI,KAAKkB,UAAUkD,OAAO,WAAYkE,EAAWtI,KAAKqF,mBAAmBf,KAAKtE,OAGxG,IAAKA,KAAKuI,mBAAoB,CACtBD,EAAY9C,EAAe,WAAa,UAC9CxF,KAAKuI,mBAAqBvI,KAAKkB,UAAUkD,OAAO,WAAYkE,EAAWtI,KAAK2E,iBAAiBL,KAAKtE,SAI9FiB,EAAAX,UAAAqG,qBAAR,WACM3G,KAAKqI,uBACPrI,KAAKqI,qBAAuBrI,KAAKqI,wBAG/BrI,KAAKuI,qBACPvI,KAAKuI,mBAAqBvI,KAAKuI,uBAI3BtH,EAAAX,UAAAgD,cAAR,SAAsBkF,GACpBxI,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,YAAY4E,EAAQ,WAGtEvH,EAAAX,UAAAiD,aAAR,SAAqBiF,GACnBxI,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,YAAY4E,EAAQ,SAGtEvH,EAAAX,UAAAmI,cAAR,WACuD,SAAjDzI,KAAK2D,YAAYC,cAAc8E,MAAMzI,SAAuBD,KAAKiE,UACnEjE,KAAKmH,WAAanH,KAAK2D,YAAYC,cAAcuD,WAGjDnH,KAAKiE,QAAUjE,KAAKkB,UAAUyH,cAAc,OAC5C3I,KAAKkB,UAAUwC,aAAa1D,KAAKiE,QAAS,QAAS,uBACnDjE,KAAKkB,UAAU0H,SAAS5I,KAAKiE,QAAS,yBAEtCjE,KAAKoI,2BAELpI,KAAKkB,UAAU6C,SAAS/D,KAAKiE,QAAS,WAAY,UAElDjE,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,QAAS,eAAe5D,KAAKsC,eAAc,KACnGtC,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,SAAU,eAAe5D,KAAKsC,eAAc,KAGpGtC,KAAKkB,UAAU2H,YAAY7I,KAAKG,YAAYyD,cAAe5D,KAAKiE,SAGhEjE,KAAKkB,UAAU2H,YAAY7I,KAAKiE,QAASjE,KAAK2D,YAAYC,eAE1D5D,KAAKgF,4BAID/D,EAAAX,UAAAwI,cAAR,WACM9I,KAAKiE,UACPjE,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,QAAS,QACjE5D,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,SAAU5D,KAAKiE,QAAQyE,MAAMK,QAC7D,OAApB/I,KAAKmH,aACPnH,KAAKmH,WAAW6B,YAAYhJ,KAAKiE,SACjCjE,KAAKmH,WAAW0B,YAAY7I,KAAK2D,YAAYC,gBAE/C5D,KAAKiE,QAAU,KAEfjE,KAAKgF,4BAID/D,EAAAX,UAAA4D,eAAR,WACMlE,KAAK2D,YAAYC,cAAcmE,aAAe/H,KAAK2D,YAAYC,cAAcyD,YAC/ErH,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,SAAU,QAElE5D,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,SAAU,eAAe5D,KAAKsC,eAAc,KAElGtC,KAAK2D,YAAYC,cAAcqF,cAAgBjJ,KAAK2D,YAAYC,cAAcsF,aAChFlJ,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,QAAS,QAEjE5D,KAAKkB,UAAU6C,SAAS/D,KAAK2D,YAAYC,cAAe,QAAS,eAAe5D,KAAKsC,eAAc,MAI/FrB,EAAAX,UAAA6C,aAAR,WACMnD,KAAKmJ,gBACPnJ,KAAKyI,gBAELzI,KAAK8I,iBAID7H,EAAAX,UAAA0C,kBAAR,eAUQoG,EAAQpJ,KAAKkB,UAAUyH,cAAc,OAC3C3I,KAAKkB,UAAU6C,SAASqF,EAAO,aAAc,UAC7CpJ,KAAKkB,UAAU6C,SAASqF,EAAO,QAAS,SACxCpJ,KAAKkB,UAAU6C,SAASqF,EAAO,kBAAmB,aAElDpJ,KAAKkB,UAAU2H,YAAY7I,KAAKmB,UAAUkI,KAAMD,OAE1CE,EAAgBF,EAAMG,YAE5BvJ,KAAKkB,UAAU6C,SAASqF,EAAO,WAAY,cAGrCI,EAAQxJ,KAAKkB,UAAUyH,cAAc,OAC3C3I,KAAKkB,UAAU6C,SAASyF,EAAO,QAAS,QACxCxJ,KAAKkB,UAAU2H,YAAYO,EAAOI,OAE5BC,EAAkBD,EAAMD,YAU9B,OAPAvJ,KAAKkB,UAAU8H,YAAYhJ,KAAKmB,UAAUkI,KAAMD,GAOzCE,EAAgBG,GAAmB,IAGpCxI,EAAAX,UAAA8H,yBAAR,WACMpI,KAAKiE,UACPjE,KAAKkB,UAAU6C,SAAS/D,KAAKiE,QAAS,QAAS,QAC/CjE,KAAKkB,UAAU6C,SAAS/D,KAAKiE,QAAS,SAAUjE,KAAKG,YAAYyD,cAAc8E,MAAMK,QAChF/I,KAAKG,YAAYyD,cAAc8F,aAAe,QAQ/CzI,EAAAX,UAAAwG,SAAR,SAAiB6C,EAAkBC,EAAYC,OACvCC,EAAO9J,KACb8J,EAAKvH,aAAc,MACbwH,EAAQJ,EAAQ5D,WACpBiE,EAASJ,EAAKG,EAAQ/J,KAAKiK,WAEzBC,EAAc,EAeZC,EAAa,WATA,IAAaC,EAAWC,EAAWC,EAUpDJ,GAjBY,GAkBZP,EAAQ5D,YAXsBqE,EAWKF,EAXMG,EAWON,EAXIO,EAWGN,GAVvDI,GAU+DP,EAVtD,GACD,EACCS,EAAI,EAAIF,EAAIA,EAAIC,GAGjBC,EAAI,KADZF,GACsBA,EAAI,GAAK,GAAKC,GAMhCH,EAAcL,EAChBC,EAAK9H,cAAgB0E,WAAWyD,EApBtB,IAuBVzD,WAAU,WACRoD,EAAKvH,aAAc,EACnBuH,EAAK/G,sBAAsBE,KAAK6G,EAAKjD,YAzB7B,KA6BdsD,KAGMlJ,EAAAX,UAAAmG,mBAAR,SAA2B8D,GAA3B,IAAAhE,EAAAvG,KACEA,KAAKwK,kBAAiB,SAAEA,EAAmBC,EAAmBC,EAAeC,EAAaC,GAErFrE,EAAK5C,YAAYC,cAAcmC,YAAc2E,GAC5CnE,EAAK5C,YAAYC,cAAcmC,YAAc0E,GAE3CA,EAAoBlE,EAAK5C,YAAYC,cAAcmC,WAAayE,EAAoB,IAAMjE,EAAKe,2BAE5Ff,EAAKhE,cACRgE,EAAKM,UAAY8D,GAEfJ,GACFhE,EAAKO,SAASP,EAAK5C,YAAYC,cAAe8G,EAAenE,EAAKS,gBAI/DT,EAAKhE,cACRgE,EAAKM,UAAY8D,EAAM,GAErBJ,GACFhE,EAAKO,SAASP,EAAK5C,YAAYC,cAAe8G,EAAgBF,EAAmBjE,EAAKS,eAG1F4D,KACUD,EAAM,IAAQpE,EAAKrB,UAAoB,SAAEC,OAAS,IAEvDoB,EAAKhE,cACRgE,EAAKM,UAAY8D,EAAM,GAEzBC,QAKE3J,EAAAX,UAAAkK,kBAAR,SAA0BK,GAWxB,QALIH,EAAgB,EAChBI,GAAc,EACZC,EAAS,WACbD,GAAc,GAEPE,EAAI,EAAGA,EAAIhL,KAAKkF,UAAoB,SAAEC,QACzC6F,IAAMhL,KAAKkF,UAAoB,SAAEC,OAAS,IAG1C2F,EAJiDE,IAAK,KAQpDP,EAAoBC,EAAgB1K,KAAKkF,UAAoB,SAAE8F,EAAI,GAAG7K,YAAYyD,cAAcyD,YAChG4D,EAAoBjL,KAAKkF,UAAoB,SAAE8F,GAAG7K,YAAYyD,cAAcyD,YAClFwD,EAAGI,EAAmBR,EAAmBC,EAAeM,EAAGD,GAE3DL,GAAiBO,IAIbhK,EAAAX,UAAAyG,mBAAR,WAEE,QADI6C,EAAK5J,KAAKmJ,gBAAkBnJ,KAAKgD,oBAAsB,EAClDgI,EAAI,EAAGA,EAAIhL,KAAK6G,UAAWmE,IAClCpB,GAAM5J,KAAKkF,UAAoB,SAAE8F,GAAG7K,YAAYyD,cAAcyD,YAEhE,OAAOuC,GAGD3I,EAAAX,UAAA6F,qBAAR,SAA6BwD,GAE3B,QADIuB,EAAuC,KAClCF,EAAI,EAAGA,EAAIhL,KAAKkF,UAAoB,SAAEC,OAAQ6F,IACjDrB,IAAY3J,KAAKkF,UAAoB,SAAE8F,GAAG7K,YAAYyD,gBACxDsH,EAAOlL,KAAKkF,UAAoB,SAAE8F,IAGtC,OAAOE,GAGDjK,EAAAX,UAAA0D,gBAAR,WACMhE,KAAKiE,SACPjE,KAAKoC,QAAUpC,KAAKiE,QAAQyE,MAAMyC,MAClCnL,KAAKqC,SAAWrC,KAAKiE,QAAQyE,MAAMK,SAEnC/I,KAAKoC,QAAUpC,KAAKG,YAAYyD,cAAc8E,MAAMyC,OAAUnL,KAAKG,YAAYyD,cAAc2F,YAAc,KAC3GvJ,KAAKqC,SAAWrC,KAAKG,YAAYyD,cAAc8E,MAAMK,QAAW/I,KAAKG,YAAYyD,cAAc8F,aAAe,UAE1GxC,EAAYlH,KAAKiE,SAAWjE,KAAKmH,WACjCC,EAAiBF,EAAYA,EAAUG,YAAc,EAC3DrH,KAAKyC,WAAczC,KAAKuH,aAAaH,EAAgBpH,KAAKkF,YAGpDjE,EAAAX,UAAAiH,aAAR,SAAqBH,EAAwBgE,GAG3C,QAFIC,EAAQ,EACRX,EAAgB,EACXM,EAAI,EAAGA,GAAKI,EAA2B,SAAEjG,OAAQ6F,IAAK,KAEvDM,EAAmDF,EAA2B,SAAEA,EAA2B,SAAEjG,OAAS,EAAI6F,GAChI,IAAKM,EACH,MAGA,MADAZ,GAAiBY,EAAwBnL,YAAYyD,cAAcyD,aAC/CD,GAGlB,MAFAiE,IAMN,OAAOD,EAAiBjG,OAASkG,GAG3BpK,EAAAX,UAAAgH,wBAAR,WAEE,OADsBtH,KAAK2D,YAAYC,cAAcmC,WAAa/F,KAAK2D,YAAYC,cAAc2F,aACzEvJ,KAAK2D,YAAYC,cAAcmE,aAOjD9G,EAAAX,UAAA0E,wBAAR,WACE,GAAIhF,KAAKkF,WAAalF,KAAKyI,cAAe,KAClC8C,EAAWvL,KAAKkF,UAAoB,SAAElF,KAAKkF,UAAoB,SAAEC,OAAS,GAAGhF,YAAYyD,cAC3F5D,KAAKiE,SAAWjE,KAAKkF,UAAoB,SAAEC,OAAS,EACtDnF,KAAKkB,UAAU6C,SAASwH,EAAU,eAAgBvL,KAAKsC,gBAEvDtC,KAAKkB,UAAU6C,SAASwH,EAAU,eAAgB,yBAnuBzDC,EAAAA,UAAS/K,KAAA,CAAC,CACTC,SAAU,cACV+K,SAAU,+GAKD,sOA3BT9K,EAAAA,WAAUC,WAAA,CAAA,CAAAC,KAqMPC,EAAAA,OAAML,KAAA,CAACE,EAAAA,qBAnMV+K,EAAAA,UAAS9K,WAAA,CAAA,CAAAC,KAoMNC,EAAAA,OAAML,KAAA,CAACiL,EAAAA,gDACP5K,EAAAA,OAAML,KAAA,CAACkL,EAAAA,oDAtFTC,EAAAA,UAASnL,KAAA,CAAC,iCAEVoL,EAAAA,gBAAepL,KAAA,CAACX,0BAoBhBgM,EAAAA,6BAEAA,EAAAA,iCAEAA,EAAAA,kCAEAA,EAAAA,sCAEAA,EAAAA,gCAKA9K,EAAAA,MAAKP,KAAA,CAAC,sCAONO,EAAAA,MAAKP,KAAA,CAAC,2CAONO,EAAAA,MAAKP,KAAA,CAAC,6CAONO,EAAAA,MAAKP,KAAA,CAAC,iDAONO,EAAAA,MAAKP,KAAA,CAAC,gDAINO,EAAAA,MAAKP,KAAA,CAAC,uCAINO,EAAAA,MAAKP,KAAA,CAAC,qCAINO,EAAAA,MAAKP,KAAA,CAAC,qCAINO,EAAAA,MAAKP,KAAA,CAAC,kCA+ONsL,EAAAA,aAAYtL,KAAA,CAAC,QAAS,CAAC,mCAiBvBsL,EAAAA,aAAYtL,KAAA,CAAC,oBA2ThBQ,EA5vBA,GCAA+K,EAAA,WAKA,SAAAA,KAUgC,2BAV/BC,EAAAA,SAAQxL,KAAA,CAAC,CACRyL,QAAS,CACPjL,EACAnB,GAEFqM,aAAc,CACZlL,EACAnB,OAG4BkM,EAfhC","sourcesContent":["import { Directive, ElementRef, Input, HostBinding, Inject } from '@angular/core';\n\n@Directive({\n  selector: '[drag-scroll-item]'\n})\nexport class DragScrollItemDirective {\n  @HostBinding('style.display')\n  display = 'inline-block';\n\n  @Input('drag-disabled')\n  get dragDisabled() { return this._dragDisabled; }\n  set dragDisabled(value: boolean) { this._dragDisabled = value; }\n\n  _dragDisabled = false;\n\n  _elementRef: ElementRef;\n\n  constructor(\n    @Inject(ElementRef) elementRef: ElementRef,\n  ) {\n    this._elementRef = elementRef;\n  }\n}\n","import {\n  ElementRef,\n  Component,\n  Renderer2,\n  OnDestroy,\n  Input,\n  Output,\n  AfterViewInit,\n  OnChanges,\n  EventEmitter,\n  ViewChild,\n  ContentChildren,\n  AfterViewChecked,\n  QueryList,\n  Inject,\n  HostListener\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { DragScrollItemDirective } from './ngx-drag-scroll-item';\n\n@Component({\n  selector: 'drag-scroll',\n  template: `\n    <div class=\"drag-scroll-content\" #contentRef>\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [`\n    :host {\n      overflow: hidden;\n      display: block;\n    }\n    .drag-scroll-content {\n      height: 100%;\n      overflow: auto;\n      white-space: nowrap;\n    }\n    `]\n})\nexport class DragScrollComponent implements OnDestroy, AfterViewInit, OnChanges, AfterViewChecked {\n  private _index = 0;\n\n  private _scrollbarHidden = false;\n\n  private _disabled = false;\n\n  private _xDisabled = false;\n\n  private _xWheelEnabled = false;\n\n  private _yDisabled = false;\n\n  private _dragDisabled = false;\n\n  private _snapDisabled = false;\n\n  private _snapOffset = 0;\n\n  private _snapDuration = 500;\n\n  private _onMouseMoveListener: Function;\n\n  private _onMouseUpListener: Function;\n\n  private _onMouseDownListener: Function;\n\n  private _onTouchStartListener: Function;\n\n  private _onScrollListener: Function;\n\n  private _onTouchEndListener: Function;\n\n  private _onDragStartListener: Function;\n\n  /**\n   * Is the user currently pressing the element\n   */\n  isPressed = false;\n\n  /**\n   * Is the user currently scrolling the element\n   */\n  isScrolling = false;\n\n  scrollTimer: number | NodeJS.Timer = -1;\n\n  scrollToTimer: number | NodeJS.Timer = -1;\n\n  /**\n   * The x coordinates on the element\n   */\n  downX = 0;\n\n  /**\n   * The y coordinates on the element\n   */\n  downY = 0;\n\n  displayType: string | null = 'block';\n\n  elWidth: string | null = null;\n\n  elHeight: string | null = null;\n\n  /**\n   * The parentNode of carousel Element\n   */\n  parentNode: HTMLElement;\n\n  /**\n   * The carousel Element\n   */\n\n  @ViewChild('contentRef') _contentRef: ElementRef;\n\n  @ContentChildren(DragScrollItemDirective) _children: QueryList<DragScrollItemDirective>;\n\n  wrapper: HTMLDivElement | null;\n\n  scrollbarWidth: string | null = null;\n\n  get currIndex() { return this._index; }\n  set currIndex(value) {\n    if (value !== this._index) {\n      this._index = value;\n      this.indexChanged.emit(value);\n    }\n  }\n\n  isAnimating = false;\n\n  prevChildrenLength = 0;\n\n  indexBound = 0;\n\n  @Output() dsInitialized = new EventEmitter<void>();\n\n  @Output() indexChanged = new EventEmitter<number>();\n\n  @Output() reachesLeftBound = new EventEmitter<boolean>();\n\n  @Output() reachesRightBound = new EventEmitter<boolean>();\n\n  @Output() snapAnimationFinished = new EventEmitter<number>();\n\n  /**\n   * Whether the scrollbar is hidden\n   */\n  @Input('scrollbar-hidden')\n  get scrollbarHidden() { return this._scrollbarHidden; }\n  set scrollbarHidden(value: boolean) { this._scrollbarHidden = value; }\n\n  /**\n   * Whether horizontally and vertically draging and scrolling is be disabled\n   */\n  @Input('drag-scroll-disabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) { this._disabled = value; }\n\n  /**\n   * Whether horizontally dragging and scrolling is be disabled\n   */\n  @Input('drag-scroll-x-disabled')\n  get xDisabled() { return this._xDisabled; }\n  set xDisabled(value: boolean) { this._xDisabled = value; }\n\n  /**\n   * Whether vertically dragging and scrolling events is disabled\n   */\n  @Input('drag-scroll-y-disabled')\n  get yDisabled() { return this._yDisabled; }\n  set yDisabled(value: boolean) { this._yDisabled = value; }\n\n  /**\n   * Whether scrolling horizontally with mouse wheel is enabled\n   */\n  @Input('scroll-x-wheel-enabled')\n  get xWheelEnabled() { return this._xWheelEnabled; }\n  set xWheelEnabled(value: boolean) { this._xWheelEnabled = value; }\n\n  @Input('drag-disabled')\n  get dragDisabled() { return this._dragDisabled; }\n  set dragDisabled(value: boolean) { this._dragDisabled = value; }\n\n  @Input('snap-disabled')\n  get snapDisabled() { return this._snapDisabled; }\n  set snapDisabled(value: boolean) { this._snapDisabled = value; }\n\n  @Input('snap-offset')\n  get snapOffset() { return this._snapOffset; }\n  set snapOffset(value: number) { this._snapOffset = value; }\n\n  @Input('snap-duration')\n  get snapDuration() { return this._snapDuration; }\n  set snapDuration(value: number) { this._snapDuration = value; }\n\n  constructor(\n    @Inject(ElementRef) private _elementRef: ElementRef,\n    @Inject(Renderer2) private _renderer: Renderer2,\n    @Inject(DOCUMENT) private _document: any\n  ) {\n    this.scrollbarWidth = `${this.getScrollbarWidth()}px`;\n  }\n\n  ngOnChanges() {\n    this.setScrollBar();\n\n    if (this.xDisabled || this.disabled) {\n      this.disableScroll('x');\n    } else {\n      this.enableScroll('x');\n    }\n\n    if (this.yDisabled || this.disabled) {\n      this.disableScroll('y');\n    } else {\n      this.enableScroll('y');\n    }\n  }\n\n  ngAfterViewInit() {\n    // auto assign computed css\n    this._renderer.setAttribute(this._contentRef.nativeElement, 'drag-scroll', 'true');\n\n    this.displayType = typeof window !== 'undefined' ? window.getComputedStyle(this._elementRef.nativeElement).display : 'block';\n\n    this._renderer.setStyle(this._contentRef.nativeElement, 'display', this.displayType);\n    this._renderer.setStyle(this._contentRef.nativeElement, 'whiteSpace', 'noWrap');\n\n    // store ele width height for later user\n    this.markElDimension();\n\n    this._renderer.setStyle(this._contentRef.nativeElement, 'width', this.elWidth);\n    this._renderer.setStyle(this._contentRef.nativeElement, 'height', this.elHeight);\n\n    if (this.wrapper) {\n      this.checkScrollbar();\n    }\n\n    this._onMouseDownListener = this._renderer.listen(this._contentRef.nativeElement, 'mousedown', this.onMouseDownHandler.bind(this));\n    this._onTouchStartListener = this._renderer.listen(this._contentRef.nativeElement, 'touchstart', this.onMouseDownHandler.bind(this));\n    this._onScrollListener = this._renderer.listen(this._contentRef.nativeElement, 'scroll', this.onScrollHandler.bind(this));\n    this._onTouchEndListener = this._renderer.listen(this._contentRef.nativeElement, 'touchend', this.onMouseUpHandler.bind(this));\n    // prevent Firefox from dragging images\n    this._onDragStartListener = this._renderer.listen('document', 'dragstart', (e) => {\n      e.preventDefault();\n    });\n    this.checkNavStatus();\n    this.dsInitialized.emit();\n    this.adjustMarginToLastChild();\n  }\n\n  ngAfterViewChecked() {\n    // avoid extra checks\n    if (this._children['_results'].length !== this.prevChildrenLength) {\n\n      this.markElDimension();\n      this.checkScrollbar();\n      this.prevChildrenLength = this._children['_results'].length;\n      this.checkNavStatus();\n    }\n  }\n\n  ngOnDestroy() {\n    this._renderer.setAttribute(this._contentRef.nativeElement, 'drag-scroll', 'false');\n    if (this._onMouseDownListener) {\n      this._onMouseDownListener = this._onMouseDownListener();\n    }\n    if (this._onTouchStartListener) {\n      this._onTouchStartListener = this._onTouchStartListener();\n    }\n    if (this._onScrollListener) {\n      this._onScrollListener = this._onScrollListener();\n    }\n    if (this._onTouchEndListener) {\n      this._onTouchEndListener = this._onTouchEndListener();\n    }\n    if (this._onDragStartListener) {\n      this._onDragStartListener = this._onDragStartListener();\n    }\n  }\n\n  onMouseMoveHandler(event: MouseEvent) {\n    this.onMouseMove(event);\n  }\n\n  onMouseMove(event: MouseEvent | TouchEvent) {\n    if (this.isPressed && !this.disabled) {\n      const isTouchEvent = event.type === 'touchmove';\n\n      // Workaround for prevent scroll stuck if browser lost focus\n      if (!isTouchEvent) {\n        const mouseEvent = event as MouseEvent;\n        // MouseEvent.buttons not support by Safari\n        // tslint:disable-next-line:deprecation\n        if (!mouseEvent.buttons && !mouseEvent.which) {\n          return this.onMouseUpHandler(mouseEvent);\n        }\n      }\n\n      // // Drag X\n      if (!this.xDisabled && !this.dragDisabled) {\n        const clientX = isTouchEvent ? (event as TouchEvent).touches[0].clientX : (event as MouseEvent).clientX;\n        this._contentRef.nativeElement.scrollLeft =\n          this._contentRef.nativeElement.scrollLeft - clientX + this.downX;\n        this.downX = clientX;\n      }\n\n      // Drag Y\n      if (!this.yDisabled && !this.dragDisabled) {\n        const clientY = isTouchEvent ? (event as TouchEvent).touches[0].clientY : (event as MouseEvent).clientY;\n        this._contentRef.nativeElement.scrollTop =\n          this._contentRef.nativeElement.scrollTop - clientY + this.downY;\n        this.downY = clientY;\n      }\n    }\n  }\n\n  onMouseDownHandler(event: MouseEvent | TouchEvent) {\n    const dragScrollItem: DragScrollItemDirective | null = this.locateDragScrollItem(event.target as Element);\n    if (dragScrollItem && dragScrollItem.dragDisabled) {\n      return;\n    }\n\n    const isTouchEvent = event.type === 'touchstart';\n\n    this._startGlobalListening(isTouchEvent);\n    this.isPressed = true;\n\n    if (isTouchEvent) {\n      const touchEvent = event as TouchEvent;\n      this.downX = touchEvent.touches[0].clientX;\n      this.downY = touchEvent.touches[0].clientY;\n    } else {\n      const mouseEvent = event as MouseEvent;\n      this.downX = mouseEvent.clientX;\n      this.downY = mouseEvent.clientY;\n    }\n\n\n    clearTimeout(this.scrollToTimer as number);\n  }\n\n  onScrollHandler() {\n    this.checkNavStatus();\n    if (!this.isPressed && !this.isAnimating && !this.snapDisabled) {\n      this.isScrolling = true;\n      clearTimeout(this.scrollTimer as number);\n      this.scrollTimer = setTimeout(() => {\n        this.isScrolling = false;\n        this.locateCurrentIndex(true);\n      }, 500);\n    } else {\n      this.locateCurrentIndex();\n    }\n  }\n\n  onMouseUpHandler(event: MouseEvent) {\n    if (this.isPressed) {\n      this.isPressed = false;\n      if (!this.snapDisabled) {\n        this.locateCurrentIndex(true);\n      } else {\n        this.locateCurrentIndex();\n      }\n      this._stopGlobalListening();\n    }\n  }\n\n  /*\n   * Nav button\n   */\n  moveLeft() {\n    if ((this.currIndex !== 0 || this.snapDisabled)) {\n      this.currIndex--;\n      clearTimeout(this.scrollToTimer as number);\n      this.scrollTo(this._contentRef.nativeElement, this.toChildrenLocation(), this.snapDuration);\n    }\n  }\n\n  moveRight() {\n    const container = this.wrapper || this.parentNode;\n    const containerWidth = container ? container.clientWidth : 0;\n\n    if (!this.isScrollReachesRightEnd() && this.currIndex < this.maximumIndex(containerWidth, this._children)) {\n      this.currIndex++;\n      clearTimeout(this.scrollToTimer as number);\n      this.scrollTo(this._contentRef.nativeElement, this.toChildrenLocation(), this.snapDuration);\n    }\n  }\n\n  moveTo(index: number) {\n    const container = this.wrapper || this.parentNode;\n    const containerWidth = container ? container.clientWidth : 0;\n    if (\n      index >= 0 &&\n      index !== this.currIndex &&\n      this.currIndex <= this.maximumIndex(containerWidth, this._children)\n    ) {\n      this.currIndex = Math.min(index, this.maximumIndex(containerWidth, this._children));\n      clearTimeout(this.scrollToTimer as number);\n      this.scrollTo(this._contentRef.nativeElement, this.toChildrenLocation(), this.snapDuration);\n    }\n  }\n\n  checkNavStatus() {\n    setTimeout(() => {\n      const onlyOneItem = Boolean(this._children['_results'].length <= 1);\n      const containerIsLargerThanContent = Boolean(this._contentRef.nativeElement.scrollWidth <=\n        this._contentRef.nativeElement.clientWidth);\n      if (onlyOneItem || containerIsLargerThanContent) {\n        // only one element\n        this.reachesLeftBound.emit(true);\n        this.reachesRightBound.emit(true);\n      } else if (this.isScrollReachesRightEnd()) {\n        // reached right end\n        this.reachesLeftBound.emit(false);\n        this.reachesRightBound.emit(true);\n      } else if (this._contentRef.nativeElement.scrollLeft === 0 &&\n        this._contentRef.nativeElement.scrollWidth > this._contentRef.nativeElement.clientWidth) {\n        // reached left end\n        this.reachesLeftBound.emit(true);\n        this.reachesRightBound.emit(false);\n      } else {\n        // in the middle\n        this.reachesLeftBound.emit(false);\n        this.reachesRightBound.emit(false);\n      }\n    }, 0);\n  }\n\n  @HostListener('wheel', ['$event'])\n  public onWheel(event: WheelEvent) {\n    if (this._xWheelEnabled) {\n      event.preventDefault();\n\n      if (this._snapDisabled) {\n        this._contentRef.nativeElement.scrollBy(event.deltaY, 0);\n      } else {\n        if (event.deltaY < 0) {\n          this.moveLeft();\n        } else if (event.deltaY > 0) {\n          this.moveRight();\n        }\n      }\n    }\n  }\n\n  @HostListener('window:resize')\n  public onWindowResize() {\n    this.refreshWrapperDimensions();\n  }\n\n  private _startGlobalListening(isTouchEvent: boolean) {\n    if (!this._onMouseMoveListener) {\n      const eventName = isTouchEvent ? 'touchmove' : 'mousemove';\n      this._onMouseMoveListener = this._renderer.listen('document', eventName, this.onMouseMoveHandler.bind(this));\n    }\n\n    if (!this._onMouseUpListener) {\n      const eventName = isTouchEvent ? 'touchend' : 'mouseup';\n      this._onMouseUpListener = this._renderer.listen('document', eventName, this.onMouseUpHandler.bind(this));\n    }\n  }\n\n  private _stopGlobalListening() {\n    if (this._onMouseMoveListener) {\n      this._onMouseMoveListener = this._onMouseMoveListener();\n    }\n\n    if (this._onMouseUpListener) {\n      this._onMouseUpListener = this._onMouseUpListener();\n    }\n  }\n\n  private disableScroll(axis: string): void {\n    this._renderer.setStyle(this._contentRef.nativeElement, `overflow-${axis}`, 'hidden');\n  }\n\n  private enableScroll(axis: string): void {\n    this._renderer.setStyle(this._contentRef.nativeElement, `overflow-${axis}`, 'auto');\n  }\n\n  private hideScrollbar(): void {\n    if (this._contentRef.nativeElement.style.display !== 'none' && !this.wrapper) {\n      this.parentNode = this._contentRef.nativeElement.parentNode;\n\n      // create container element\n      this.wrapper = this._renderer.createElement('div');\n      this._renderer.setAttribute(this.wrapper, 'class', 'drag-scroll-wrapper');\n      this._renderer.addClass(this.wrapper, 'drag-scroll-container');\n\n      this.refreshWrapperDimensions();\n\n      this._renderer.setStyle(this.wrapper, 'overflow', 'hidden');\n\n      this._renderer.setStyle(this._contentRef.nativeElement, 'width', `calc(100% + ${this.scrollbarWidth})`);\n      this._renderer.setStyle(this._contentRef.nativeElement, 'height', `calc(100% + ${this.scrollbarWidth})`);\n\n      // Append container element to component element.\n      this._renderer.appendChild(this._elementRef.nativeElement, this.wrapper);\n\n      // Append content element to container element.\n      this._renderer.appendChild(this.wrapper, this._contentRef.nativeElement);\n\n      this.adjustMarginToLastChild();\n    }\n  }\n\n  private showScrollbar(): void {\n    if (this.wrapper) {\n      this._renderer.setStyle(this._contentRef.nativeElement, 'width', '100%');\n      this._renderer.setStyle(this._contentRef.nativeElement, 'height', this.wrapper.style.height);\n      if (this.parentNode !== null) {\n        this.parentNode.removeChild(this.wrapper);\n        this.parentNode.appendChild(this._contentRef.nativeElement);\n      }\n      this.wrapper = null;\n\n      this.adjustMarginToLastChild();\n    }\n  }\n\n  private checkScrollbar() {\n    if (this._contentRef.nativeElement.scrollWidth <= this._contentRef.nativeElement.clientWidth) {\n      this._renderer.setStyle(this._contentRef.nativeElement, 'height', '100%');\n    } else {\n      this._renderer.setStyle(this._contentRef.nativeElement, 'height', `calc(100% + ${this.scrollbarWidth})`);\n    }\n    if (this._contentRef.nativeElement.scrollHeight <= this._contentRef.nativeElement.clientHeight) {\n      this._renderer.setStyle(this._contentRef.nativeElement, 'width', '100%');\n    } else {\n      this._renderer.setStyle(this._contentRef.nativeElement, 'width', `calc(100% + ${this.scrollbarWidth})`);\n    }\n  }\n\n  private setScrollBar(): void {\n    if (this.scrollbarHidden) {\n      this.hideScrollbar();\n    } else {\n      this.showScrollbar();\n    }\n  }\n\n  private getScrollbarWidth(): number {\n    /**\n     * Browser Scrollbar Widths (2016)\n     * OSX (Chrome, Safari, Firefox) - 15px\n     * Windows XP (IE7, Chrome, Firefox) - 17px\n     * Windows 7 (IE10, IE11, Chrome, Firefox) - 17px\n     * Windows 8.1 (IE11, Chrome, Firefox) - 17px\n     * Windows 10 (IE11, Chrome, Firefox) - 17px\n     * Windows 10 (Edge 12/13) - 12px\n     */\n    const outer = this._renderer.createElement('div');\n    this._renderer.setStyle(outer, 'visibility', 'hidden');\n    this._renderer.setStyle(outer, 'width', '100px');\n    this._renderer.setStyle(outer, 'msOverflowStyle', 'scrollbar');  // needed for WinJS apps\n    // document.body.appendChild(outer);\n    this._renderer.appendChild(this._document.body, outer);\n    // this._renderer.appendChild(this._renderer.selectRootElement('body'), outer);\n    const widthNoScroll = outer.offsetWidth;\n    // force scrollbars\n    this._renderer.setStyle(outer, 'overflow', 'scroll');\n\n    // add innerdiv\n    const inner = this._renderer.createElement('div');\n    this._renderer.setStyle(inner, 'width', '100%');\n    this._renderer.appendChild(outer, inner);\n\n    const widthWithScroll = inner.offsetWidth;\n\n    // remove divs\n    this._renderer.removeChild(this._document.body, outer);\n\n    /**\n     * Scrollbar width will be 0 on Mac OS with the\n     * default \"Only show scrollbars when scrolling\" setting (Yosemite and up).\n     * setting default width to 20;\n     */\n    return widthNoScroll - widthWithScroll || 20;\n  }\n\n  private refreshWrapperDimensions() {\n    if (this.wrapper) {\n      this._renderer.setStyle(this.wrapper, 'width', '100%');\n      this._renderer.setStyle(this.wrapper, 'height', this._elementRef.nativeElement.style.height\n        || this._elementRef.nativeElement.offsetHeight + 'px');\n    }\n  }\n\n  /*\n  * The below solution is heavily inspired from\n  * https://gist.github.com/andjosh/6764939\n  */\n  private scrollTo(element: Element, to: number, duration: number) {\n    const self = this;\n    self.isAnimating = true;\n    const start = element.scrollLeft,\n      change = to - start - this.snapOffset,\n      increment = 20;\n    let currentTime = 0;\n\n    // t = current time\n    // b = start value\n    // c = change in value\n    // d = duration\n    const easeInOutQuad = function (t: number, b: number, c: number, d: number) {\n      t /= d / 2;\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = function () {\n      currentTime += increment;\n      element.scrollLeft = easeInOutQuad(currentTime, start, change, duration);\n      if (currentTime < duration) {\n        self.scrollToTimer = setTimeout(animateScroll, increment);\n      } else {\n        // run one more frame to make sure the animation is fully finished\n        setTimeout(() => {\n          self.isAnimating = false;\n          self.snapAnimationFinished.emit(self.currIndex);\n        }, increment);\n      }\n    };\n    animateScroll();\n  }\n\n  private locateCurrentIndex(snap?: boolean) {\n    this.currentChildWidth((currentChildWidth, nextChildrenWidth, childrenWidth, idx: number, stop) => {\n      if (\n        (this._contentRef.nativeElement.scrollLeft >= childrenWidth &&\n          this._contentRef.nativeElement.scrollLeft <= nextChildrenWidth)\n      ) {\n        if (nextChildrenWidth - this._contentRef.nativeElement.scrollLeft > currentChildWidth / 2 && !this.isScrollReachesRightEnd()) {\n          // roll back scrolling\n          if (!this.isAnimating) {\n            this.currIndex = idx;\n          }\n          if (snap) {\n            this.scrollTo(this._contentRef.nativeElement, childrenWidth, this.snapDuration);\n          }\n        } else {\n          // forward scrolling\n          if (!this.isAnimating) {\n            this.currIndex = idx + 1;\n          }\n          if (snap) {\n            this.scrollTo(this._contentRef.nativeElement, childrenWidth + currentChildWidth, this.snapDuration);\n          }\n        }\n        stop();\n      } else if ((idx + 1) === (this._children['_results'].length - 1)) {\n        // reaches last index\n        if (!this.isAnimating) {\n          this.currIndex = idx + 1;\n        }\n        stop();\n      }\n    });\n  }\n\n  private currentChildWidth(cb: (\n    currentClildWidth: number,\n    nextChildrenWidth: number,\n    childrenWidth: number,\n    index: number,\n    breakFunc: () => void) => void) {\n    let childrenWidth = 0;\n    let shouldBreak = false;\n    const breakFunc = function () {\n      shouldBreak = true;\n    };\n    for (let i = 0; i < this._children['_results'].length; i++) {\n      if (i === this._children['_results'].length - 1) {\n        break;\n      }\n      if (shouldBreak) {\n        break;\n      }\n\n      const nextChildrenWidth = childrenWidth + this._children['_results'][i + 1]._elementRef.nativeElement.clientWidth;\n      const currentClildWidth = this._children['_results'][i]._elementRef.nativeElement.clientWidth;\n      cb(currentClildWidth, nextChildrenWidth, childrenWidth, i, breakFunc);\n\n      childrenWidth += currentClildWidth;\n    }\n  }\n\n  private toChildrenLocation(): number {\n    let to = this.scrollbarHidden ? this.getScrollbarWidth() : 0;\n    for (let i = 0; i < this.currIndex; i++) {\n      to += this._children['_results'][i]._elementRef.nativeElement.clientWidth;\n    }\n    return to;\n  }\n\n  private locateDragScrollItem(element: Element): DragScrollItemDirective | null {\n    let item: DragScrollItemDirective | null = null;\n    for (let i = 0; i < this._children['_results'].length; i++) {\n      if (element === this._children['_results'][i]._elementRef.nativeElement) {\n        item = this._children['_results'][i];\n      }\n    }\n    return item;\n  }\n\n  private markElDimension() {\n    if (this.wrapper) {\n      this.elWidth = this.wrapper.style.width;\n      this.elHeight = this.wrapper.style.height;\n    } else {\n      this.elWidth = this._elementRef.nativeElement.style.width || (this._elementRef.nativeElement.offsetWidth + 'px');\n      this.elHeight = this._elementRef.nativeElement.style.height || (this._elementRef.nativeElement.offsetHeight + 'px');\n    }\n    const container = this.wrapper || this.parentNode;\n    const containerWidth = container ? container.clientWidth : 0;\n    this.indexBound =  this.maximumIndex(containerWidth, this._children);\n  }\n\n  private maximumIndex(containerWidth: number, childrenElements: QueryList<DragScrollItemDirective>): number {\n    let count = 0;\n    let childrenWidth = 0;\n    for (let i = 0; i <= childrenElements['_results'].length; i++) {\n      // last N element\n      const dragScrollItemDirective: DragScrollItemDirective = childrenElements['_results'][childrenElements['_results'].length - 1 - i];\n      if (!dragScrollItemDirective) {\n        break;\n      } else {\n        childrenWidth += dragScrollItemDirective._elementRef.nativeElement.clientWidth;\n        if (childrenWidth < containerWidth) {\n          count++;\n        } else {\n          break;\n        }\n      }\n    }\n    return childrenElements.length - count;\n  }\n\n  private isScrollReachesRightEnd(): boolean {\n    const scrollLeftPos = this._contentRef.nativeElement.scrollLeft + this._contentRef.nativeElement.offsetWidth;\n    return scrollLeftPos >= this._contentRef.nativeElement.scrollWidth;\n  }\n\n  /**\n   * adds a margin right style to the last child element which will resolve the issue\n   * of last item gets cutoff.\n   */\n  private adjustMarginToLastChild(): void {\n    if (this._children && this.hideScrollbar) {\n      const lastItem = this._children['_results'][this._children['_results'].length - 1]._elementRef.nativeElement;\n      if (this.wrapper && this._children['_results'].length > 1) {\n        this._renderer.setStyle(lastItem, 'margin-right', this.scrollbarWidth);\n      } else {\n        this._renderer.setStyle(lastItem, 'margin-right', 0);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { DragScrollComponent } from './ngx-drag-scroll.component';\nimport { DragScrollItemDirective } from './ngx-drag-scroll-item';\n\n@NgModule({\n  exports: [\n    DragScrollComponent,\n    DragScrollItemDirective\n  ],\n  declarations: [\n    DragScrollComponent,\n    DragScrollItemDirective\n  ]\n})\nexport class DragScrollModule { }\n"]}